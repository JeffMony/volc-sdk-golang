// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.12.4
// source: vod/request/request_vod.proto

package request

import (
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	business "github.com/volcengine/volc-sdk-golang/service/vod/models/business"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VodGetPlayInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vid        string `protobuf:"bytes,1,opt,name=Vid,proto3" json:"Vid,omitempty"`               // 视频ID
	Format     string `protobuf:"bytes,2,opt,name=Format,proto3" json:"Format,omitempty"`         //封装格式，支持mp4,dash,hls，默认mp4Format
	Codec      string `protobuf:"bytes,3,opt,name=Codec,proto3" json:"Codec,omitempty"`           //编码类型，默认h264，可选值为h264, h265等Codec
	Definition string `protobuf:"bytes,4,opt,name=Definition,proto3" json:"Definition,omitempty"` //视频流清晰度，默认返回全部，支持：240p，360p，480p，540p，720p，1080p,
	// 2k, 4k
	FileType        string `protobuf:"bytes,5,opt,name=FileType,proto3" json:"FileType,omitempty"`                //流文件类型，默认video，支持：加密视频流evideo，加密音频流传eaudio，非加密视频流video，普通音频音频流audio
	LogoType        string `protobuf:"bytes,6,opt,name=LogoType,proto3" json:"LogoType,omitempty"`                // 水印贴片标签
	Base64          string `protobuf:"bytes,7,opt,name=Base64,proto3" json:"Base64,omitempty"`                    //播放地址是否base64编码，默认否，支持设置： 0-否，1-是
	Ssl             string `protobuf:"bytes,8,opt,name=Ssl,proto3" json:"Ssl,omitempty"`                          //返回https播放地址，默认否, 1-是；0-否
	NeedThumbs      string `protobuf:"bytes,9,opt,name=NeedThumbs,proto3" json:"NeedThumbs,omitempty"`            // 是否需要雪碧图（缩略图），默认否，1-是；0-否
	NeedBarrageMask string `protobuf:"bytes,10,opt,name=NeedBarrageMask,proto3" json:"NeedBarrageMask,omitempty"` // 是否需要蒙版弹幕，默认否，1-是；0-否
	CdnType         string `protobuf:"bytes,11,opt,name=CdnType,proto3" json:"CdnType,omitempty"`                 // 指定CDN类型
	UnionInfo       string `protobuf:"bytes,12,opt,name=UnionInfo,proto3" json:"UnionInfo,omitempty"`             // 唯一性标识信息
	HDRDefinition   string `protobuf:"bytes,13,opt,name=HDRDefinition,proto3" json:"HDRDefinition,omitempty"`     // HDR清晰度，默认不查询，支持：all,
	// 240p，360p, 420p，480p，540p，720p，1080p, 2k, 4k
	PlayScene          string `protobuf:"bytes,14,opt,name=PlayScene,proto3" json:"PlayScene,omitempty"`                   // 播放场景
	DrmExpireTimestamp string `protobuf:"bytes,15,opt,name=DrmExpireTimestamp,proto3" json:"DrmExpireTimestamp,omitempty"` // DRM过期时间戳
	Quality            string `protobuf:"bytes,16,opt,name=Quality,proto3" json:"Quality,omitempty"`                       //音频码率
}

func (x *VodGetPlayInfoRequest) Reset() {
	*x = VodGetPlayInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_request_request_vod_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetPlayInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetPlayInfoRequest) ProtoMessage() {}

func (x *VodGetPlayInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vod_request_request_vod_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetPlayInfoRequest.ProtoReflect.Descriptor instead.
func (*VodGetPlayInfoRequest) Descriptor() ([]byte, []int) {
	return file_vod_request_request_vod_proto_rawDescGZIP(), []int{0}
}

func (x *VodGetPlayInfoRequest) GetVid() string {
	if x != nil {
		return x.Vid
	}
	return ""
}

func (x *VodGetPlayInfoRequest) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *VodGetPlayInfoRequest) GetCodec() string {
	if x != nil {
		return x.Codec
	}
	return ""
}

func (x *VodGetPlayInfoRequest) GetDefinition() string {
	if x != nil {
		return x.Definition
	}
	return ""
}

func (x *VodGetPlayInfoRequest) GetFileType() string {
	if x != nil {
		return x.FileType
	}
	return ""
}

func (x *VodGetPlayInfoRequest) GetLogoType() string {
	if x != nil {
		return x.LogoType
	}
	return ""
}

func (x *VodGetPlayInfoRequest) GetBase64() string {
	if x != nil {
		return x.Base64
	}
	return ""
}

func (x *VodGetPlayInfoRequest) GetSsl() string {
	if x != nil {
		return x.Ssl
	}
	return ""
}

func (x *VodGetPlayInfoRequest) GetNeedThumbs() string {
	if x != nil {
		return x.NeedThumbs
	}
	return ""
}

func (x *VodGetPlayInfoRequest) GetNeedBarrageMask() string {
	if x != nil {
		return x.NeedBarrageMask
	}
	return ""
}

func (x *VodGetPlayInfoRequest) GetCdnType() string {
	if x != nil {
		return x.CdnType
	}
	return ""
}

func (x *VodGetPlayInfoRequest) GetUnionInfo() string {
	if x != nil {
		return x.UnionInfo
	}
	return ""
}

func (x *VodGetPlayInfoRequest) GetHDRDefinition() string {
	if x != nil {
		return x.HDRDefinition
	}
	return ""
}

func (x *VodGetPlayInfoRequest) GetPlayScene() string {
	if x != nil {
		return x.PlayScene
	}
	return ""
}

func (x *VodGetPlayInfoRequest) GetDrmExpireTimestamp() string {
	if x != nil {
		return x.DrmExpireTimestamp
	}
	return ""
}

func (x *VodGetPlayInfoRequest) GetQuality() string {
	if x != nil {
		return x.Quality
	}
	return ""
}

type VodGetOriginalPlayInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vid    string `protobuf:"bytes,1,opt,name=Vid,proto3" json:"Vid,omitempty"`       //视频ID
	Base64 string `protobuf:"bytes,2,opt,name=Base64,proto3" json:"Base64,omitempty"` //播放地址是否base64编码,默认否，0-否，1-是
	Ssl    string `protobuf:"bytes,3,opt,name=Ssl,proto3" json:"Ssl,omitempty"`       //返回https播放地址,默认否, 0-否，1-是
}

func (x *VodGetOriginalPlayInfoRequest) Reset() {
	*x = VodGetOriginalPlayInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_request_request_vod_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetOriginalPlayInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetOriginalPlayInfoRequest) ProtoMessage() {}

func (x *VodGetOriginalPlayInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vod_request_request_vod_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetOriginalPlayInfoRequest.ProtoReflect.Descriptor instead.
func (*VodGetOriginalPlayInfoRequest) Descriptor() ([]byte, []int) {
	return file_vod_request_request_vod_proto_rawDescGZIP(), []int{1}
}

func (x *VodGetOriginalPlayInfoRequest) GetVid() string {
	if x != nil {
		return x.Vid
	}
	return ""
}

func (x *VodGetOriginalPlayInfoRequest) GetBase64() string {
	if x != nil {
		return x.Base64
	}
	return ""
}

func (x *VodGetOriginalPlayInfoRequest) GetSsl() string {
	if x != nil {
		return x.Ssl
	}
	return ""
}

type VodGetPrivateDrmPlayAuthRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DrmType     string `protobuf:"bytes,1,opt,name=DrmType,proto3" json:"DrmType,omitempty"`         // drm类型（不区分大小写，支持web,app;默认web）
	Vid         string `protobuf:"bytes,2,opt,name=Vid,proto3" json:"Vid,omitempty"`                 // 视频id
	PlayAuthIds string `protobuf:"bytes,3,opt,name=PlayAuthIds,proto3" json:"PlayAuthIds,omitempty"` // 播放许可id列表，以逗号分割
	UnionInfo   string `protobuf:"bytes,4,opt,name=UnionInfo,proto3" json:"UnionInfo,omitempty"`     // 加密唯一信息
}

func (x *VodGetPrivateDrmPlayAuthRequest) Reset() {
	*x = VodGetPrivateDrmPlayAuthRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_request_request_vod_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetPrivateDrmPlayAuthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetPrivateDrmPlayAuthRequest) ProtoMessage() {}

func (x *VodGetPrivateDrmPlayAuthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vod_request_request_vod_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetPrivateDrmPlayAuthRequest.ProtoReflect.Descriptor instead.
func (*VodGetPrivateDrmPlayAuthRequest) Descriptor() ([]byte, []int) {
	return file_vod_request_request_vod_proto_rawDescGZIP(), []int{2}
}

func (x *VodGetPrivateDrmPlayAuthRequest) GetDrmType() string {
	if x != nil {
		return x.DrmType
	}
	return ""
}

func (x *VodGetPrivateDrmPlayAuthRequest) GetVid() string {
	if x != nil {
		return x.Vid
	}
	return ""
}

func (x *VodGetPrivateDrmPlayAuthRequest) GetPlayAuthIds() string {
	if x != nil {
		return x.PlayAuthIds
	}
	return ""
}

func (x *VodGetPrivateDrmPlayAuthRequest) GetUnionInfo() string {
	if x != nil {
		return x.UnionInfo
	}
	return ""
}

type VodGetHlsDecryptionKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DrmAuthToken string `protobuf:"bytes,1,opt,name=DrmAuthToken,proto3" json:"DrmAuthToken,omitempty"` // Drm鉴权Token
	Ak           string `protobuf:"bytes,2,opt,name=Ak,proto3" json:"Ak,omitempty"`                     // AccessKey
	Source       string `protobuf:"bytes,3,opt,name=Source,proto3" json:"Source,omitempty"`             // Drm鉴权数据源
}

func (x *VodGetHlsDecryptionKeyRequest) Reset() {
	*x = VodGetHlsDecryptionKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_request_request_vod_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetHlsDecryptionKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetHlsDecryptionKeyRequest) ProtoMessage() {}

func (x *VodGetHlsDecryptionKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vod_request_request_vod_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetHlsDecryptionKeyRequest.ProtoReflect.Descriptor instead.
func (*VodGetHlsDecryptionKeyRequest) Descriptor() ([]byte, []int) {
	return file_vod_request_request_vod_proto_rawDescGZIP(), []int{3}
}

func (x *VodGetHlsDecryptionKeyRequest) GetDrmAuthToken() string {
	if x != nil {
		return x.DrmAuthToken
	}
	return ""
}

func (x *VodGetHlsDecryptionKeyRequest) GetAk() string {
	if x != nil {
		return x.Ak
	}
	return ""
}

func (x *VodGetHlsDecryptionKeyRequest) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

type VodGetPlayInfoWithLiveTimeShiftSceneRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StoreUris             string `protobuf:"bytes,1,opt,name=StoreUris,proto3" json:"StoreUris,omitempty"`                         // 播放URI
	SpaceName             string `protobuf:"bytes,2,opt,name=SpaceName,proto3" json:"SpaceName,omitempty"`                         // 空间名称
	Ssl                   string `protobuf:"bytes,3,opt,name=Ssl,proto3" json:"Ssl,omitempty"`                                     //返回https播放地址，默认否, 1-是；0-否
	ExpireTimestamp       string `protobuf:"bytes,4,opt,name=ExpireTimestamp,proto3" json:"ExpireTimestamp,omitempty"`             // 过期时间戳：毫秒。若不传，则为当前时间+1小时
	NeedComposeBucketName string `protobuf:"bytes,5,opt,name=NeedComposeBucketName,proto3" json:"NeedComposeBucketName,omitempty"` //生成地址时填充BucketName，默认否, 1-是；0-否
}

func (x *VodGetPlayInfoWithLiveTimeShiftSceneRequest) Reset() {
	*x = VodGetPlayInfoWithLiveTimeShiftSceneRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_request_request_vod_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetPlayInfoWithLiveTimeShiftSceneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetPlayInfoWithLiveTimeShiftSceneRequest) ProtoMessage() {}

func (x *VodGetPlayInfoWithLiveTimeShiftSceneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vod_request_request_vod_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetPlayInfoWithLiveTimeShiftSceneRequest.ProtoReflect.Descriptor instead.
func (*VodGetPlayInfoWithLiveTimeShiftSceneRequest) Descriptor() ([]byte, []int) {
	return file_vod_request_request_vod_proto_rawDescGZIP(), []int{4}
}

func (x *VodGetPlayInfoWithLiveTimeShiftSceneRequest) GetStoreUris() string {
	if x != nil {
		return x.StoreUris
	}
	return ""
}

func (x *VodGetPlayInfoWithLiveTimeShiftSceneRequest) GetSpaceName() string {
	if x != nil {
		return x.SpaceName
	}
	return ""
}

func (x *VodGetPlayInfoWithLiveTimeShiftSceneRequest) GetSsl() string {
	if x != nil {
		return x.Ssl
	}
	return ""
}

func (x *VodGetPlayInfoWithLiveTimeShiftSceneRequest) GetExpireTimestamp() string {
	if x != nil {
		return x.ExpireTimestamp
	}
	return ""
}

func (x *VodGetPlayInfoWithLiveTimeShiftSceneRequest) GetNeedComposeBucketName() string {
	if x != nil {
		return x.NeedComposeBucketName
	}
	return ""
}

type VodUrlUploadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpaceName string                         `protobuf:"bytes,1,opt,name=SpaceName,proto3" json:"SpaceName,omitempty"` // 上传的空间名
	URLSets   []*business.VodUrlUploadURLSet `protobuf:"bytes,2,rep,name=URLSets,proto3" json:"URLSets,omitempty"`     // 上传URL设置参数集合
}

func (x *VodUrlUploadRequest) Reset() {
	*x = VodUrlUploadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_request_request_vod_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodUrlUploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodUrlUploadRequest) ProtoMessage() {}

func (x *VodUrlUploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vod_request_request_vod_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodUrlUploadRequest.ProtoReflect.Descriptor instead.
func (*VodUrlUploadRequest) Descriptor() ([]byte, []int) {
	return file_vod_request_request_vod_proto_rawDescGZIP(), []int{5}
}

func (x *VodUrlUploadRequest) GetSpaceName() string {
	if x != nil {
		return x.SpaceName
	}
	return ""
}

func (x *VodUrlUploadRequest) GetURLSets() []*business.VodUrlUploadURLSet {
	if x != nil {
		return x.URLSets
	}
	return nil
}

type VodQueryUploadTaskInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobIds string `protobuf:"bytes,1,opt,name=JobIds,proto3" json:"JobIds,omitempty"`
}

func (x *VodQueryUploadTaskInfoRequest) Reset() {
	*x = VodQueryUploadTaskInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_request_request_vod_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodQueryUploadTaskInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodQueryUploadTaskInfoRequest) ProtoMessage() {}

func (x *VodQueryUploadTaskInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vod_request_request_vod_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodQueryUploadTaskInfoRequest.ProtoReflect.Descriptor instead.
func (*VodQueryUploadTaskInfoRequest) Descriptor() ([]byte, []int) {
	return file_vod_request_request_vod_proto_rawDescGZIP(), []int{6}
}

func (x *VodQueryUploadTaskInfoRequest) GetJobIds() string {
	if x != nil {
		return x.JobIds
	}
	return ""
}

type VodApplyUploadInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpaceName  string  `protobuf:"bytes,1,opt,name=SpaceName,proto3" json:"SpaceName,omitempty"`
	SessionKey string  `protobuf:"bytes,2,opt,name=SessionKey,proto3" json:"SessionKey,omitempty"`
	FileSize   float64 `protobuf:"fixed64,3,opt,name=FileSize,proto3" json:"FileSize,omitempty"`
	FileType   string  `protobuf:"bytes,4,opt,name=FileType,proto3" json:"FileType,omitempty"`
	FileName   string  `protobuf:"bytes,5,opt,name=FileName,proto3" json:"FileName,omitempty"`
}

func (x *VodApplyUploadInfoRequest) Reset() {
	*x = VodApplyUploadInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_request_request_vod_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodApplyUploadInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodApplyUploadInfoRequest) ProtoMessage() {}

func (x *VodApplyUploadInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vod_request_request_vod_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodApplyUploadInfoRequest.ProtoReflect.Descriptor instead.
func (*VodApplyUploadInfoRequest) Descriptor() ([]byte, []int) {
	return file_vod_request_request_vod_proto_rawDescGZIP(), []int{7}
}

func (x *VodApplyUploadInfoRequest) GetSpaceName() string {
	if x != nil {
		return x.SpaceName
	}
	return ""
}

func (x *VodApplyUploadInfoRequest) GetSessionKey() string {
	if x != nil {
		return x.SessionKey
	}
	return ""
}

func (x *VodApplyUploadInfoRequest) GetFileSize() float64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *VodApplyUploadInfoRequest) GetFileType() string {
	if x != nil {
		return x.FileType
	}
	return ""
}

func (x *VodApplyUploadInfoRequest) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

type VodUploadMediaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpaceName    string `protobuf:"bytes,1,opt,name=SpaceName,proto3" json:"SpaceName,omitempty"`
	FilePath     string `protobuf:"bytes,2,opt,name=FilePath,proto3" json:"FilePath,omitempty"`
	CallbackArgs string `protobuf:"bytes,3,opt,name=CallbackArgs,proto3" json:"CallbackArgs,omitempty"`
	Functions    string `protobuf:"bytes,4,opt,name=Functions,proto3" json:"Functions,omitempty"`
	FileName     string `protobuf:"bytes,5,opt,name=FileName,proto3" json:"FileName,omitempty"`
}

func (x *VodUploadMediaRequest) Reset() {
	*x = VodUploadMediaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_request_request_vod_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodUploadMediaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodUploadMediaRequest) ProtoMessage() {}

func (x *VodUploadMediaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vod_request_request_vod_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodUploadMediaRequest.ProtoReflect.Descriptor instead.
func (*VodUploadMediaRequest) Descriptor() ([]byte, []int) {
	return file_vod_request_request_vod_proto_rawDescGZIP(), []int{8}
}

func (x *VodUploadMediaRequest) GetSpaceName() string {
	if x != nil {
		return x.SpaceName
	}
	return ""
}

func (x *VodUploadMediaRequest) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *VodUploadMediaRequest) GetCallbackArgs() string {
	if x != nil {
		return x.CallbackArgs
	}
	return ""
}

func (x *VodUploadMediaRequest) GetFunctions() string {
	if x != nil {
		return x.Functions
	}
	return ""
}

func (x *VodUploadMediaRequest) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

type VodUploadMaterialRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpaceName    string `protobuf:"bytes,1,opt,name=SpaceName,proto3" json:"SpaceName,omitempty"`
	FilePath     string `protobuf:"bytes,2,opt,name=FilePath,proto3" json:"FilePath,omitempty"`
	CallbackArgs string `protobuf:"bytes,3,opt,name=CallbackArgs,proto3" json:"CallbackArgs,omitempty"`
	Functions    string `protobuf:"bytes,4,opt,name=Functions,proto3" json:"Functions,omitempty"`
	FileType     string `protobuf:"bytes,5,opt,name=FileType,proto3" json:"FileType,omitempty"`
	FileName     string `protobuf:"bytes,6,opt,name=FileName,proto3" json:"FileName,omitempty"`
}

func (x *VodUploadMaterialRequest) Reset() {
	*x = VodUploadMaterialRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_request_request_vod_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodUploadMaterialRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodUploadMaterialRequest) ProtoMessage() {}

func (x *VodUploadMaterialRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vod_request_request_vod_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodUploadMaterialRequest.ProtoReflect.Descriptor instead.
func (*VodUploadMaterialRequest) Descriptor() ([]byte, []int) {
	return file_vod_request_request_vod_proto_rawDescGZIP(), []int{9}
}

func (x *VodUploadMaterialRequest) GetSpaceName() string {
	if x != nil {
		return x.SpaceName
	}
	return ""
}

func (x *VodUploadMaterialRequest) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *VodUploadMaterialRequest) GetCallbackArgs() string {
	if x != nil {
		return x.CallbackArgs
	}
	return ""
}

func (x *VodUploadMaterialRequest) GetFunctions() string {
	if x != nil {
		return x.Functions
	}
	return ""
}

func (x *VodUploadMaterialRequest) GetFileType() string {
	if x != nil {
		return x.FileType
	}
	return ""
}

func (x *VodUploadMaterialRequest) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

type VodCommitUploadInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpaceName    string `protobuf:"bytes,1,opt,name=SpaceName,proto3" json:"SpaceName,omitempty"`
	SessionKey   string `protobuf:"bytes,2,opt,name=SessionKey,proto3" json:"SessionKey,omitempty"`
	CallbackArgs string `protobuf:"bytes,3,opt,name=CallbackArgs,proto3" json:"CallbackArgs,omitempty"`
	Functions    string `protobuf:"bytes,4,opt,name=Functions,proto3" json:"Functions,omitempty"`
}

func (x *VodCommitUploadInfoRequest) Reset() {
	*x = VodCommitUploadInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_request_request_vod_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodCommitUploadInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodCommitUploadInfoRequest) ProtoMessage() {}

func (x *VodCommitUploadInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vod_request_request_vod_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodCommitUploadInfoRequest.ProtoReflect.Descriptor instead.
func (*VodCommitUploadInfoRequest) Descriptor() ([]byte, []int) {
	return file_vod_request_request_vod_proto_rawDescGZIP(), []int{10}
}

func (x *VodCommitUploadInfoRequest) GetSpaceName() string {
	if x != nil {
		return x.SpaceName
	}
	return ""
}

func (x *VodCommitUploadInfoRequest) GetSessionKey() string {
	if x != nil {
		return x.SessionKey
	}
	return ""
}

func (x *VodCommitUploadInfoRequest) GetCallbackArgs() string {
	if x != nil {
		return x.CallbackArgs
	}
	return ""
}

func (x *VodCommitUploadInfoRequest) GetFunctions() string {
	if x != nil {
		return x.Functions
	}
	return ""
}

type VodUrlUploadJsonRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpaceName string `protobuf:"bytes,1,opt,name=SpaceName,proto3" json:"SpaceName,omitempty"`
	URLSets   string `protobuf:"bytes,2,opt,name=URLSets,proto3" json:"URLSets,omitempty"`
}

func (x *VodUrlUploadJsonRequest) Reset() {
	*x = VodUrlUploadJsonRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_request_request_vod_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodUrlUploadJsonRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodUrlUploadJsonRequest) ProtoMessage() {}

func (x *VodUrlUploadJsonRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vod_request_request_vod_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodUrlUploadJsonRequest.ProtoReflect.Descriptor instead.
func (*VodUrlUploadJsonRequest) Descriptor() ([]byte, []int) {
	return file_vod_request_request_vod_proto_rawDescGZIP(), []int{11}
}

func (x *VodUrlUploadJsonRequest) GetSpaceName() string {
	if x != nil {
		return x.SpaceName
	}
	return ""
}

func (x *VodUrlUploadJsonRequest) GetURLSets() string {
	if x != nil {
		return x.URLSets
	}
	return ""
}

type VodGetRecommendedPosterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vids string `protobuf:"bytes,1,opt,name=Vids,proto3" json:"Vids,omitempty"` //视频ID列表
}

func (x *VodGetRecommendedPosterRequest) Reset() {
	*x = VodGetRecommendedPosterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_request_request_vod_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetRecommendedPosterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetRecommendedPosterRequest) ProtoMessage() {}

func (x *VodGetRecommendedPosterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vod_request_request_vod_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetRecommendedPosterRequest.ProtoReflect.Descriptor instead.
func (*VodGetRecommendedPosterRequest) Descriptor() ([]byte, []int) {
	return file_vod_request_request_vod_proto_rawDescGZIP(), []int{12}
}

func (x *VodGetRecommendedPosterRequest) GetVids() string {
	if x != nil {
		return x.Vids
	}
	return ""
}

type VodUpdateMediaPublishStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vid    string `protobuf:"bytes,1,opt,name=Vid,proto3" json:"Vid,omitempty"`       //视频ID
	Status string `protobuf:"bytes,2,opt,name=Status,proto3" json:"Status,omitempty"` //视频发布状态
}

func (x *VodUpdateMediaPublishStatusRequest) Reset() {
	*x = VodUpdateMediaPublishStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_request_request_vod_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodUpdateMediaPublishStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodUpdateMediaPublishStatusRequest) ProtoMessage() {}

func (x *VodUpdateMediaPublishStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vod_request_request_vod_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodUpdateMediaPublishStatusRequest.ProtoReflect.Descriptor instead.
func (*VodUpdateMediaPublishStatusRequest) Descriptor() ([]byte, []int) {
	return file_vod_request_request_vod_proto_rawDescGZIP(), []int{13}
}

func (x *VodUpdateMediaPublishStatusRequest) GetVid() string {
	if x != nil {
		return x.Vid
	}
	return ""
}

func (x *VodUpdateMediaPublishStatusRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type VodUpdateMediaInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vid              string                `protobuf:"bytes,1,opt,name=Vid,proto3" json:"Vid,omitempty"`                           //视频ID
	PosterUri        *wrappers.StringValue `protobuf:"bytes,2,opt,name=PosterUri,proto3" json:"PosterUri,omitempty"`               //视频封面Uri
	Title            *wrappers.StringValue `protobuf:"bytes,3,opt,name=Title,proto3" json:"Title,omitempty"`                       //视频名称
	Description      *wrappers.StringValue `protobuf:"bytes,4,opt,name=Description,proto3" json:"Description,omitempty"`           //视频描述
	Tags             *wrappers.StringValue `protobuf:"bytes,5,opt,name=Tags,proto3" json:"Tags,omitempty"`                         //视频标签
	ClassificationId *wrappers.Int64Value  `protobuf:"bytes,6,opt,name=ClassificationId,proto3" json:"ClassificationId,omitempty"` //视频分类Id
}

func (x *VodUpdateMediaInfoRequest) Reset() {
	*x = VodUpdateMediaInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_request_request_vod_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodUpdateMediaInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodUpdateMediaInfoRequest) ProtoMessage() {}

func (x *VodUpdateMediaInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vod_request_request_vod_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodUpdateMediaInfoRequest.ProtoReflect.Descriptor instead.
func (*VodUpdateMediaInfoRequest) Descriptor() ([]byte, []int) {
	return file_vod_request_request_vod_proto_rawDescGZIP(), []int{14}
}

func (x *VodUpdateMediaInfoRequest) GetVid() string {
	if x != nil {
		return x.Vid
	}
	return ""
}

func (x *VodUpdateMediaInfoRequest) GetPosterUri() *wrappers.StringValue {
	if x != nil {
		return x.PosterUri
	}
	return nil
}

func (x *VodUpdateMediaInfoRequest) GetTitle() *wrappers.StringValue {
	if x != nil {
		return x.Title
	}
	return nil
}

func (x *VodUpdateMediaInfoRequest) GetDescription() *wrappers.StringValue {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *VodUpdateMediaInfoRequest) GetTags() *wrappers.StringValue {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *VodUpdateMediaInfoRequest) GetClassificationId() *wrappers.Int64Value {
	if x != nil {
		return x.ClassificationId
	}
	return nil
}

type VodGetMediaInfosRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vids string `protobuf:"bytes,1,opt,name=Vids,proto3" json:"Vids,omitempty"` //视频ID列表
}

func (x *VodGetMediaInfosRequest) Reset() {
	*x = VodGetMediaInfosRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_request_request_vod_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetMediaInfosRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetMediaInfosRequest) ProtoMessage() {}

func (x *VodGetMediaInfosRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vod_request_request_vod_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetMediaInfosRequest.ProtoReflect.Descriptor instead.
func (*VodGetMediaInfosRequest) Descriptor() ([]byte, []int) {
	return file_vod_request_request_vod_proto_rawDescGZIP(), []int{15}
}

func (x *VodGetMediaInfosRequest) GetVids() string {
	if x != nil {
		return x.Vids
	}
	return ""
}

type VodDeleteMediaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vids         string `protobuf:"bytes,1,opt,name=Vids,proto3" json:"Vids,omitempty"`                 //视频ID列表
	CallbackArgs string `protobuf:"bytes,2,opt,name=CallbackArgs,proto3" json:"CallbackArgs,omitempty"` //回调回传参数
}

func (x *VodDeleteMediaRequest) Reset() {
	*x = VodDeleteMediaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_request_request_vod_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodDeleteMediaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodDeleteMediaRequest) ProtoMessage() {}

func (x *VodDeleteMediaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vod_request_request_vod_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodDeleteMediaRequest.ProtoReflect.Descriptor instead.
func (*VodDeleteMediaRequest) Descriptor() ([]byte, []int) {
	return file_vod_request_request_vod_proto_rawDescGZIP(), []int{16}
}

func (x *VodDeleteMediaRequest) GetVids() string {
	if x != nil {
		return x.Vids
	}
	return ""
}

func (x *VodDeleteMediaRequest) GetCallbackArgs() string {
	if x != nil {
		return x.CallbackArgs
	}
	return ""
}

type VodDeleteTranscodesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vid          string `protobuf:"bytes,1,opt,name=Vid,proto3" json:"Vid,omitempty"`                   //视频ID
	FileIds      string `protobuf:"bytes,2,opt,name=FileIds,proto3" json:"FileIds,omitempty"`           //转码视频ID列表
	CallbackArgs string `protobuf:"bytes,3,opt,name=CallbackArgs,proto3" json:"CallbackArgs,omitempty"` //回调回传参数
}

func (x *VodDeleteTranscodesRequest) Reset() {
	*x = VodDeleteTranscodesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_request_request_vod_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodDeleteTranscodesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodDeleteTranscodesRequest) ProtoMessage() {}

func (x *VodDeleteTranscodesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vod_request_request_vod_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodDeleteTranscodesRequest.ProtoReflect.Descriptor instead.
func (*VodDeleteTranscodesRequest) Descriptor() ([]byte, []int) {
	return file_vod_request_request_vod_proto_rawDescGZIP(), []int{17}
}

func (x *VodDeleteTranscodesRequest) GetVid() string {
	if x != nil {
		return x.Vid
	}
	return ""
}

func (x *VodDeleteTranscodesRequest) GetFileIds() string {
	if x != nil {
		return x.FileIds
	}
	return ""
}

func (x *VodDeleteTranscodesRequest) GetCallbackArgs() string {
	if x != nil {
		return x.CallbackArgs
	}
	return ""
}

type VodGetMediaListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpaceName         string `protobuf:"bytes,1,opt,name=SpaceName,proto3" json:"SpaceName,omitempty"`                  //空间名
	Vid               string `protobuf:"bytes,2,opt,name=Vid,proto3" json:"Vid,omitempty"`                              //视频ID
	Status            string `protobuf:"bytes,3,opt,name=Status,proto3" json:"Status,omitempty"`                        //视频状态
	Order             string `protobuf:"bytes,4,opt,name=Order,proto3" json:"Order,omitempty"`                          //排序规则
	Tags              string `protobuf:"bytes,5,opt,name=Tags,proto3" json:"Tags,omitempty"`                            //标签，多个用","隔开
	StartTime         string `protobuf:"bytes,6,opt,name=StartTime,proto3" json:"StartTime,omitempty"`                  //查询时间范围下限
	EndTime           string `protobuf:"bytes,7,opt,name=EndTime,proto3" json:"EndTime,omitempty"`                      //查询时间范围上限
	Offset            string `protobuf:"bytes,8,opt,name=Offset,proto3" json:"Offset,omitempty"`                        //数据偏移量
	PageSize          string `protobuf:"bytes,9,opt,name=PageSize,proto3" json:"PageSize,omitempty"`                    //分页大小
	ClassificationIds string `protobuf:"bytes,10,opt,name=ClassificationIds,proto3" json:"ClassificationIds,omitempty"` //分类id列表
}

func (x *VodGetMediaListRequest) Reset() {
	*x = VodGetMediaListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_request_request_vod_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetMediaListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetMediaListRequest) ProtoMessage() {}

func (x *VodGetMediaListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vod_request_request_vod_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetMediaListRequest.ProtoReflect.Descriptor instead.
func (*VodGetMediaListRequest) Descriptor() ([]byte, []int) {
	return file_vod_request_request_vod_proto_rawDescGZIP(), []int{18}
}

func (x *VodGetMediaListRequest) GetSpaceName() string {
	if x != nil {
		return x.SpaceName
	}
	return ""
}

func (x *VodGetMediaListRequest) GetVid() string {
	if x != nil {
		return x.Vid
	}
	return ""
}

func (x *VodGetMediaListRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *VodGetMediaListRequest) GetOrder() string {
	if x != nil {
		return x.Order
	}
	return ""
}

func (x *VodGetMediaListRequest) GetTags() string {
	if x != nil {
		return x.Tags
	}
	return ""
}

func (x *VodGetMediaListRequest) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *VodGetMediaListRequest) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *VodGetMediaListRequest) GetOffset() string {
	if x != nil {
		return x.Offset
	}
	return ""
}

func (x *VodGetMediaListRequest) GetPageSize() string {
	if x != nil {
		return x.PageSize
	}
	return ""
}

func (x *VodGetMediaListRequest) GetClassificationIds() string {
	if x != nil {
		return x.ClassificationIds
	}
	return ""
}

type VodGetSubtitleInfoListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vid         string `protobuf:"bytes,1,opt,name=Vid,proto3" json:"Vid,omitempty"`                 //视频ID
	FileIds     string `protobuf:"bytes,2,opt,name=FileIds,proto3" json:"FileIds,omitempty"`         //转码视频id列表，多个用","隔开
	Languages   string `protobuf:"bytes,3,opt,name=Languages,proto3" json:"Languages,omitempty"`     //字幕语言列表，多个用","隔开
	Formats     string `protobuf:"bytes,4,opt,name=Formats,proto3" json:"Formats,omitempty"`         //字幕格式列表，多个用","隔开
	LanguageIds string `protobuf:"bytes,5,opt,name=LanguageIds,proto3" json:"LanguageIds,omitempty"` //字幕语言Id列表，多个用","隔开
	SubtitleIds string `protobuf:"bytes,6,opt,name=SubtitleIds,proto3" json:"SubtitleIds,omitempty"` //字幕Id列表，多个用","隔开
	Status      string `protobuf:"bytes,7,opt,name=Status,proto3" json:"Status,omitempty"`           //状态，多个用","隔开
	Title       string `protobuf:"bytes,8,opt,name=Title,proto3" json:"Title,omitempty"`             //标题
	Tag         string `protobuf:"bytes,9,opt,name=Tag,proto3" json:"Tag,omitempty"`                 //标签
	Offset      string `protobuf:"bytes,10,opt,name=Offset,proto3" json:"Offset,omitempty"`          // file的偏移量
	PageSize    string `protobuf:"bytes,11,opt,name=PageSize,proto3" json:"PageSize,omitempty"`      //分页大小（结果一fileId分页）
	Ssl         string `protobuf:"bytes,12,opt,name=Ssl,proto3" json:"Ssl,omitempty"`                //返回https播放地址，默认否, 1-是；0-否
}

func (x *VodGetSubtitleInfoListRequest) Reset() {
	*x = VodGetSubtitleInfoListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_request_request_vod_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetSubtitleInfoListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetSubtitleInfoListRequest) ProtoMessage() {}

func (x *VodGetSubtitleInfoListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vod_request_request_vod_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetSubtitleInfoListRequest.ProtoReflect.Descriptor instead.
func (*VodGetSubtitleInfoListRequest) Descriptor() ([]byte, []int) {
	return file_vod_request_request_vod_proto_rawDescGZIP(), []int{19}
}

func (x *VodGetSubtitleInfoListRequest) GetVid() string {
	if x != nil {
		return x.Vid
	}
	return ""
}

func (x *VodGetSubtitleInfoListRequest) GetFileIds() string {
	if x != nil {
		return x.FileIds
	}
	return ""
}

func (x *VodGetSubtitleInfoListRequest) GetLanguages() string {
	if x != nil {
		return x.Languages
	}
	return ""
}

func (x *VodGetSubtitleInfoListRequest) GetFormats() string {
	if x != nil {
		return x.Formats
	}
	return ""
}

func (x *VodGetSubtitleInfoListRequest) GetLanguageIds() string {
	if x != nil {
		return x.LanguageIds
	}
	return ""
}

func (x *VodGetSubtitleInfoListRequest) GetSubtitleIds() string {
	if x != nil {
		return x.SubtitleIds
	}
	return ""
}

func (x *VodGetSubtitleInfoListRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *VodGetSubtitleInfoListRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *VodGetSubtitleInfoListRequest) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *VodGetSubtitleInfoListRequest) GetOffset() string {
	if x != nil {
		return x.Offset
	}
	return ""
}

func (x *VodGetSubtitleInfoListRequest) GetPageSize() string {
	if x != nil {
		return x.PageSize
	}
	return ""
}

func (x *VodGetSubtitleInfoListRequest) GetSsl() string {
	if x != nil {
		return x.Ssl
	}
	return ""
}

type VodUpdateSubtitleStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vid       string `protobuf:"bytes,1,opt,name=Vid,proto3" json:"Vid,omitempty"`             //视频ID
	FileIds   string `protobuf:"bytes,2,opt,name=FileIds,proto3" json:"FileIds,omitempty"`     //转码视频id列表，多个用","隔开
	Languages string `protobuf:"bytes,3,opt,name=Languages,proto3" json:"Languages,omitempty"` //字幕语言列表，多个用","隔开
	Formats   string `protobuf:"bytes,4,opt,name=Formats,proto3" json:"Formats,omitempty"`     //字幕格式列表，多个用","隔开
	Status    string `protobuf:"bytes,5,opt,name=Status,proto3" json:"Status,omitempty"`       //状态
}

func (x *VodUpdateSubtitleStatusRequest) Reset() {
	*x = VodUpdateSubtitleStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_request_request_vod_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodUpdateSubtitleStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodUpdateSubtitleStatusRequest) ProtoMessage() {}

func (x *VodUpdateSubtitleStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vod_request_request_vod_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodUpdateSubtitleStatusRequest.ProtoReflect.Descriptor instead.
func (*VodUpdateSubtitleStatusRequest) Descriptor() ([]byte, []int) {
	return file_vod_request_request_vod_proto_rawDescGZIP(), []int{20}
}

func (x *VodUpdateSubtitleStatusRequest) GetVid() string {
	if x != nil {
		return x.Vid
	}
	return ""
}

func (x *VodUpdateSubtitleStatusRequest) GetFileIds() string {
	if x != nil {
		return x.FileIds
	}
	return ""
}

func (x *VodUpdateSubtitleStatusRequest) GetLanguages() string {
	if x != nil {
		return x.Languages
	}
	return ""
}

func (x *VodUpdateSubtitleStatusRequest) GetFormats() string {
	if x != nil {
		return x.Formats
	}
	return ""
}

func (x *VodUpdateSubtitleStatusRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type VodUpdateSubtitleInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vid      string                `protobuf:"bytes,1,opt,name=Vid,proto3" json:"Vid,omitempty"`           //视频ID
	FileId   string                `protobuf:"bytes,2,opt,name=FileId,proto3" json:"FileId,omitempty"`     //转码视频id列表
	Language string                `protobuf:"bytes,3,opt,name=Language,proto3" json:"Language,omitempty"` //字幕语言列表
	Format   string                `protobuf:"bytes,4,opt,name=Format,proto3" json:"Format,omitempty"`     //字幕格式列表
	Title    *wrappers.StringValue `protobuf:"bytes,6,opt,name=Title,proto3" json:"Title,omitempty"`       //标题
	Tag      *wrappers.StringValue `protobuf:"bytes,7,opt,name=Tag,proto3" json:"Tag,omitempty"`           //标签
}

func (x *VodUpdateSubtitleInfoRequest) Reset() {
	*x = VodUpdateSubtitleInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_request_request_vod_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodUpdateSubtitleInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodUpdateSubtitleInfoRequest) ProtoMessage() {}

func (x *VodUpdateSubtitleInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vod_request_request_vod_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodUpdateSubtitleInfoRequest.ProtoReflect.Descriptor instead.
func (*VodUpdateSubtitleInfoRequest) Descriptor() ([]byte, []int) {
	return file_vod_request_request_vod_proto_rawDescGZIP(), []int{21}
}

func (x *VodUpdateSubtitleInfoRequest) GetVid() string {
	if x != nil {
		return x.Vid
	}
	return ""
}

func (x *VodUpdateSubtitleInfoRequest) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *VodUpdateSubtitleInfoRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *VodUpdateSubtitleInfoRequest) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *VodUpdateSubtitleInfoRequest) GetTitle() *wrappers.StringValue {
	if x != nil {
		return x.Title
	}
	return nil
}

func (x *VodUpdateSubtitleInfoRequest) GetTag() *wrappers.StringValue {
	if x != nil {
		return x.Tag
	}
	return nil
}

type VodCreateVideoClassificationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpaceName      string `protobuf:"bytes,1,opt,name=SpaceName,proto3" json:"SpaceName,omitempty"`
	Level          int32  `protobuf:"varint,2,opt,name=Level,proto3" json:"Level,omitempty"`
	ParentId       int64  `protobuf:"varint,3,opt,name=ParentId,proto3" json:"ParentId,omitempty"`
	Classification string `protobuf:"bytes,4,opt,name=Classification,proto3" json:"Classification,omitempty"`
}

func (x *VodCreateVideoClassificationRequest) Reset() {
	*x = VodCreateVideoClassificationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_request_request_vod_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodCreateVideoClassificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodCreateVideoClassificationRequest) ProtoMessage() {}

func (x *VodCreateVideoClassificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vod_request_request_vod_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodCreateVideoClassificationRequest.ProtoReflect.Descriptor instead.
func (*VodCreateVideoClassificationRequest) Descriptor() ([]byte, []int) {
	return file_vod_request_request_vod_proto_rawDescGZIP(), []int{22}
}

func (x *VodCreateVideoClassificationRequest) GetSpaceName() string {
	if x != nil {
		return x.SpaceName
	}
	return ""
}

func (x *VodCreateVideoClassificationRequest) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *VodCreateVideoClassificationRequest) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *VodCreateVideoClassificationRequest) GetClassification() string {
	if x != nil {
		return x.Classification
	}
	return ""
}

type VodUpdateVideoClassificationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpaceName        string `protobuf:"bytes,1,opt,name=SpaceName,proto3" json:"SpaceName,omitempty"`
	ClassificationId int64  `protobuf:"varint,2,opt,name=ClassificationId,proto3" json:"ClassificationId,omitempty"`
	Classification   string `protobuf:"bytes,3,opt,name=Classification,proto3" json:"Classification,omitempty"`
}

func (x *VodUpdateVideoClassificationRequest) Reset() {
	*x = VodUpdateVideoClassificationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_request_request_vod_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodUpdateVideoClassificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodUpdateVideoClassificationRequest) ProtoMessage() {}

func (x *VodUpdateVideoClassificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vod_request_request_vod_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodUpdateVideoClassificationRequest.ProtoReflect.Descriptor instead.
func (*VodUpdateVideoClassificationRequest) Descriptor() ([]byte, []int) {
	return file_vod_request_request_vod_proto_rawDescGZIP(), []int{23}
}

func (x *VodUpdateVideoClassificationRequest) GetSpaceName() string {
	if x != nil {
		return x.SpaceName
	}
	return ""
}

func (x *VodUpdateVideoClassificationRequest) GetClassificationId() int64 {
	if x != nil {
		return x.ClassificationId
	}
	return 0
}

func (x *VodUpdateVideoClassificationRequest) GetClassification() string {
	if x != nil {
		return x.Classification
	}
	return ""
}

type VodDeleteVideoClassificationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpaceName        string `protobuf:"bytes,1,opt,name=SpaceName,proto3" json:"SpaceName,omitempty"`
	ClassificationId int64  `protobuf:"varint,2,opt,name=ClassificationId,proto3" json:"ClassificationId,omitempty"`
}

func (x *VodDeleteVideoClassificationRequest) Reset() {
	*x = VodDeleteVideoClassificationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_request_request_vod_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodDeleteVideoClassificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodDeleteVideoClassificationRequest) ProtoMessage() {}

func (x *VodDeleteVideoClassificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vod_request_request_vod_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodDeleteVideoClassificationRequest.ProtoReflect.Descriptor instead.
func (*VodDeleteVideoClassificationRequest) Descriptor() ([]byte, []int) {
	return file_vod_request_request_vod_proto_rawDescGZIP(), []int{24}
}

func (x *VodDeleteVideoClassificationRequest) GetSpaceName() string {
	if x != nil {
		return x.SpaceName
	}
	return ""
}

func (x *VodDeleteVideoClassificationRequest) GetClassificationId() int64 {
	if x != nil {
		return x.ClassificationId
	}
	return 0
}

type VodListVideoClassificationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpaceName        string `protobuf:"bytes,1,opt,name=SpaceName,proto3" json:"SpaceName,omitempty"`
	ClassificationId int64  `protobuf:"varint,2,opt,name=ClassificationId,proto3" json:"ClassificationId,omitempty"`
}

func (x *VodListVideoClassificationsRequest) Reset() {
	*x = VodListVideoClassificationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_request_request_vod_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodListVideoClassificationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodListVideoClassificationsRequest) ProtoMessage() {}

func (x *VodListVideoClassificationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vod_request_request_vod_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodListVideoClassificationsRequest.ProtoReflect.Descriptor instead.
func (*VodListVideoClassificationsRequest) Descriptor() ([]byte, []int) {
	return file_vod_request_request_vod_proto_rawDescGZIP(), []int{25}
}

func (x *VodListVideoClassificationsRequest) GetSpaceName() string {
	if x != nil {
		return x.SpaceName
	}
	return ""
}

func (x *VodListVideoClassificationsRequest) GetClassificationId() int64 {
	if x != nil {
		return x.ClassificationId
	}
	return 0
}

type VodGetAuditFramesForAuditRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vid               string `protobuf:"bytes,1,opt,name=Vid,proto3" json:"Vid,omitempty"`                             //视频ID
	Strategy          string `protobuf:"bytes,2,opt,name=Strategy,proto3" json:"Strategy,omitempty"`                   //审核帧模板信息中的Strategy，抽帧策略
	MinNumberOfFrames string `protobuf:"bytes,3,opt,name=MinNumberOfFrames,proto3" json:"MinNumberOfFrames,omitempty"` //最小帧数，未设置时以服务配置默认值为准
	MaxNumberOfFrames string `protobuf:"bytes,4,opt,name=MaxNumberOfFrames,proto3" json:"MaxNumberOfFrames,omitempty"` //最大帧数，未设置时以服务配置默认值为准
}

func (x *VodGetAuditFramesForAuditRequest) Reset() {
	*x = VodGetAuditFramesForAuditRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_request_request_vod_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetAuditFramesForAuditRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetAuditFramesForAuditRequest) ProtoMessage() {}

func (x *VodGetAuditFramesForAuditRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vod_request_request_vod_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetAuditFramesForAuditRequest.ProtoReflect.Descriptor instead.
func (*VodGetAuditFramesForAuditRequest) Descriptor() ([]byte, []int) {
	return file_vod_request_request_vod_proto_rawDescGZIP(), []int{26}
}

func (x *VodGetAuditFramesForAuditRequest) GetVid() string {
	if x != nil {
		return x.Vid
	}
	return ""
}

func (x *VodGetAuditFramesForAuditRequest) GetStrategy() string {
	if x != nil {
		return x.Strategy
	}
	return ""
}

func (x *VodGetAuditFramesForAuditRequest) GetMinNumberOfFrames() string {
	if x != nil {
		return x.MinNumberOfFrames
	}
	return ""
}

func (x *VodGetAuditFramesForAuditRequest) GetMaxNumberOfFrames() string {
	if x != nil {
		return x.MaxNumberOfFrames
	}
	return ""
}

type VodGetMLFramesForAuditRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vid               string `protobuf:"bytes,1,opt,name=Vid,proto3" json:"Vid,omitempty"`                              //视频ID
	Strategy          string `protobuf:"bytes,2,opt,name=Strategy,proto3" json:"Strategy,omitempty"`                    //审核帧模板信息中的Strategy，抽帧策略
	FrameOpt          string `protobuf:"bytes,3,opt,name=FrameOpt,proto3" json:"FrameOpt,omitempty"`                    //抽帧方式,参考VodFrameExtractingOptionForAudit
	FrameFps          string `protobuf:"bytes,4,opt,name=FrameFps,proto3" json:"FrameFps,omitempty"`                    //抽帧方式选择Fps或FpsLimitNumberOfFrames时生效,表示抽帧的帧率,生效时需要保证大于0
	NumberOfFrames    string `protobuf:"bytes,5,opt,name=NumberOfFrames,proto3" json:"NumberOfFrames,omitempty"`        //抽帧方式选择NumberOfFrames时生效,表示需要多少帧,生效时需要保证大于0
	CutTimeMills      string `protobuf:"bytes,6,opt,name=CutTimeMills,proto3" json:"CutTimeMills,omitempty"`            //抽帧方式选择CutTimes时生效,逗号分割,表示需要获取的帧的时间戳(ms)列表，生效时需要保证数组不为空
	NeedFirstFrame    string `protobuf:"bytes,7,opt,name=NeedFirstFrame,proto3" json:"NeedFirstFrame,omitempty"`        //需要首帧, 默认0，支持设置： 0-否，1-是
	NeedLastFrame     string `protobuf:"bytes,8,opt,name=NeedLastFrame,proto3" json:"NeedLastFrame,omitempty"`          //需要尾帧, 默认0，支持设置： 0-否，1-是
	StartTimeMill     string `protobuf:"bytes,9,opt,name=StartTimeMill,proto3" json:"StartTimeMill,omitempty"`          //从视频的第几秒开始抽帧，单位:ms
	EndTimeMill       string `protobuf:"bytes,10,opt,name=EndTimeMill,proto3" json:"EndTimeMill,omitempty"`             //从视频的第几秒结束抽帧，单位:ms
	MinNumberOfFrames string `protobuf:"bytes,11,opt,name=MinNumberOfFrames,proto3" json:"MinNumberOfFrames,omitempty"` //抽帧方式选择FpsLimitNumberOfFrames时生效,表示限制的最小帧数,为0表示不限制
	MaxNumberOfFrames string `protobuf:"bytes,12,opt,name=MaxNumberOfFrames,proto3" json:"MaxNumberOfFrames,omitempty"` //抽帧方式选择FpsLimitNumberOfFrames时生效,表示限制的最大帧数,为0表示不限制
}

func (x *VodGetMLFramesForAuditRequest) Reset() {
	*x = VodGetMLFramesForAuditRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_request_request_vod_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetMLFramesForAuditRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetMLFramesForAuditRequest) ProtoMessage() {}

func (x *VodGetMLFramesForAuditRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vod_request_request_vod_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetMLFramesForAuditRequest.ProtoReflect.Descriptor instead.
func (*VodGetMLFramesForAuditRequest) Descriptor() ([]byte, []int) {
	return file_vod_request_request_vod_proto_rawDescGZIP(), []int{27}
}

func (x *VodGetMLFramesForAuditRequest) GetVid() string {
	if x != nil {
		return x.Vid
	}
	return ""
}

func (x *VodGetMLFramesForAuditRequest) GetStrategy() string {
	if x != nil {
		return x.Strategy
	}
	return ""
}

func (x *VodGetMLFramesForAuditRequest) GetFrameOpt() string {
	if x != nil {
		return x.FrameOpt
	}
	return ""
}

func (x *VodGetMLFramesForAuditRequest) GetFrameFps() string {
	if x != nil {
		return x.FrameFps
	}
	return ""
}

func (x *VodGetMLFramesForAuditRequest) GetNumberOfFrames() string {
	if x != nil {
		return x.NumberOfFrames
	}
	return ""
}

func (x *VodGetMLFramesForAuditRequest) GetCutTimeMills() string {
	if x != nil {
		return x.CutTimeMills
	}
	return ""
}

func (x *VodGetMLFramesForAuditRequest) GetNeedFirstFrame() string {
	if x != nil {
		return x.NeedFirstFrame
	}
	return ""
}

func (x *VodGetMLFramesForAuditRequest) GetNeedLastFrame() string {
	if x != nil {
		return x.NeedLastFrame
	}
	return ""
}

func (x *VodGetMLFramesForAuditRequest) GetStartTimeMill() string {
	if x != nil {
		return x.StartTimeMill
	}
	return ""
}

func (x *VodGetMLFramesForAuditRequest) GetEndTimeMill() string {
	if x != nil {
		return x.EndTimeMill
	}
	return ""
}

func (x *VodGetMLFramesForAuditRequest) GetMinNumberOfFrames() string {
	if x != nil {
		return x.MinNumberOfFrames
	}
	return ""
}

func (x *VodGetMLFramesForAuditRequest) GetMaxNumberOfFrames() string {
	if x != nil {
		return x.MaxNumberOfFrames
	}
	return ""
}

type VodGetBetterFramesForAuditRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vid       string `protobuf:"bytes,1,opt,name=Vid,proto3" json:"Vid,omitempty"`             // Vid
	Strategy  string `protobuf:"bytes,2,opt,name=Strategy,proto3" json:"Strategy,omitempty"`   //视频审核帧模板中的Strategy，抽帧策略，默认为default
	CoverRate string `protobuf:"bytes,3,opt,name=CoverRate,proto3" json:"CoverRate,omitempty"` // 优选帧的覆盖率得分，取值[0,1]，0代表取全部优选帧
}

func (x *VodGetBetterFramesForAuditRequest) Reset() {
	*x = VodGetBetterFramesForAuditRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_request_request_vod_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetBetterFramesForAuditRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetBetterFramesForAuditRequest) ProtoMessage() {}

func (x *VodGetBetterFramesForAuditRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vod_request_request_vod_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetBetterFramesForAuditRequest.ProtoReflect.Descriptor instead.
func (*VodGetBetterFramesForAuditRequest) Descriptor() ([]byte, []int) {
	return file_vod_request_request_vod_proto_rawDescGZIP(), []int{28}
}

func (x *VodGetBetterFramesForAuditRequest) GetVid() string {
	if x != nil {
		return x.Vid
	}
	return ""
}

func (x *VodGetBetterFramesForAuditRequest) GetStrategy() string {
	if x != nil {
		return x.Strategy
	}
	return ""
}

func (x *VodGetBetterFramesForAuditRequest) GetCoverRate() string {
	if x != nil {
		return x.CoverRate
	}
	return ""
}

type VodGetAudioInfoForAuditRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vid      string `protobuf:"bytes,1,opt,name=Vid,proto3" json:"Vid,omitempty"`           // vid
	Strategy string `protobuf:"bytes,2,opt,name=Strategy,proto3" json:"Strategy,omitempty"` //音频审核帧模板中的Strategy，抽帧策略
}

func (x *VodGetAudioInfoForAuditRequest) Reset() {
	*x = VodGetAudioInfoForAuditRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_request_request_vod_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetAudioInfoForAuditRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetAudioInfoForAuditRequest) ProtoMessage() {}

func (x *VodGetAudioInfoForAuditRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vod_request_request_vod_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetAudioInfoForAuditRequest.ProtoReflect.Descriptor instead.
func (*VodGetAudioInfoForAuditRequest) Descriptor() ([]byte, []int) {
	return file_vod_request_request_vod_proto_rawDescGZIP(), []int{29}
}

func (x *VodGetAudioInfoForAuditRequest) GetVid() string {
	if x != nil {
		return x.Vid
	}
	return ""
}

func (x *VodGetAudioInfoForAuditRequest) GetStrategy() string {
	if x != nil {
		return x.Strategy
	}
	return ""
}

type VodGetAutomaticSpeechRecognitionForAuditRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vid      string `protobuf:"bytes,1,opt,name=Vid,proto3" json:"Vid,omitempty"`           // Vid
	Strategy string `protobuf:"bytes,2,opt,name=Strategy,proto3" json:"Strategy,omitempty"` // 语音转文字模板中的Strategy
}

func (x *VodGetAutomaticSpeechRecognitionForAuditRequest) Reset() {
	*x = VodGetAutomaticSpeechRecognitionForAuditRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_request_request_vod_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetAutomaticSpeechRecognitionForAuditRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetAutomaticSpeechRecognitionForAuditRequest) ProtoMessage() {}

func (x *VodGetAutomaticSpeechRecognitionForAuditRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vod_request_request_vod_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetAutomaticSpeechRecognitionForAuditRequest.ProtoReflect.Descriptor instead.
func (*VodGetAutomaticSpeechRecognitionForAuditRequest) Descriptor() ([]byte, []int) {
	return file_vod_request_request_vod_proto_rawDescGZIP(), []int{30}
}

func (x *VodGetAutomaticSpeechRecognitionForAuditRequest) GetVid() string {
	if x != nil {
		return x.Vid
	}
	return ""
}

func (x *VodGetAutomaticSpeechRecognitionForAuditRequest) GetStrategy() string {
	if x != nil {
		return x.Strategy
	}
	return ""
}

type VodGetAudioEventDetectionForAuditRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vid      string `protobuf:"bytes,1,opt,name=Vid,proto3" json:"Vid,omitempty"`           // Vid
	Strategy string `protobuf:"bytes,2,opt,name=Strategy,proto3" json:"Strategy,omitempty"` // 语音转文字模板中的Strategy
}

func (x *VodGetAudioEventDetectionForAuditRequest) Reset() {
	*x = VodGetAudioEventDetectionForAuditRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_request_request_vod_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetAudioEventDetectionForAuditRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetAudioEventDetectionForAuditRequest) ProtoMessage() {}

func (x *VodGetAudioEventDetectionForAuditRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vod_request_request_vod_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetAudioEventDetectionForAuditRequest.ProtoReflect.Descriptor instead.
func (*VodGetAudioEventDetectionForAuditRequest) Descriptor() ([]byte, []int) {
	return file_vod_request_request_vod_proto_rawDescGZIP(), []int{31}
}

func (x *VodGetAudioEventDetectionForAuditRequest) GetVid() string {
	if x != nil {
		return x.Vid
	}
	return ""
}

func (x *VodGetAudioEventDetectionForAuditRequest) GetStrategy() string {
	if x != nil {
		return x.Strategy
	}
	return ""
}

type VodListSnapshotsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vid string `protobuf:"bytes,1,opt,name=Vid,proto3" json:"Vid,omitempty"`
}

func (x *VodListSnapshotsRequest) Reset() {
	*x = VodListSnapshotsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_request_request_vod_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodListSnapshotsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodListSnapshotsRequest) ProtoMessage() {}

func (x *VodListSnapshotsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vod_request_request_vod_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodListSnapshotsRequest.ProtoReflect.Descriptor instead.
func (*VodListSnapshotsRequest) Descriptor() ([]byte, []int) {
	return file_vod_request_request_vod_proto_rawDescGZIP(), []int{32}
}

func (x *VodListSnapshotsRequest) GetVid() string {
	if x != nil {
		return x.Vid
	}
	return ""
}

type VodStartWorkflowRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vid               string                   `protobuf:"bytes,1,opt,name=Vid,proto3" json:"Vid,omitempty"`                              // 视频Id
	TemplateId        string                   `protobuf:"bytes,2,opt,name=TemplateId,proto3" json:"TemplateId,omitempty"`                // 工作流模板Id
	Input             *business.WorkflowParams `protobuf:"bytes,3,opt,name=Input,proto3" json:"Input,omitempty"`                          // 动态参数
	Priority          int32                    `protobuf:"varint,4,opt,name=Priority,proto3" json:"Priority,omitempty"`                   // 任务优先级
	CallbackArgs      string                   `protobuf:"bytes,5,opt,name=CallbackArgs,proto3" json:"CallbackArgs,omitempty"`            // 回调参数
	EnableLowPriority bool                     `protobuf:"varint,6,opt,name=EnableLowPriority,proto3" json:"EnableLowPriority,omitempty"` // 是否使能闲时转码
}

func (x *VodStartWorkflowRequest) Reset() {
	*x = VodStartWorkflowRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_request_request_vod_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodStartWorkflowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodStartWorkflowRequest) ProtoMessage() {}

func (x *VodStartWorkflowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vod_request_request_vod_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodStartWorkflowRequest.ProtoReflect.Descriptor instead.
func (*VodStartWorkflowRequest) Descriptor() ([]byte, []int) {
	return file_vod_request_request_vod_proto_rawDescGZIP(), []int{33}
}

func (x *VodStartWorkflowRequest) GetVid() string {
	if x != nil {
		return x.Vid
	}
	return ""
}

func (x *VodStartWorkflowRequest) GetTemplateId() string {
	if x != nil {
		return x.TemplateId
	}
	return ""
}

func (x *VodStartWorkflowRequest) GetInput() *business.WorkflowParams {
	if x != nil {
		return x.Input
	}
	return nil
}

func (x *VodStartWorkflowRequest) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *VodStartWorkflowRequest) GetCallbackArgs() string {
	if x != nil {
		return x.CallbackArgs
	}
	return ""
}

func (x *VodStartWorkflowRequest) GetEnableLowPriority() bool {
	if x != nil {
		return x.EnableLowPriority
	}
	return false
}

type VodCreateSpaceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpaceName   string `protobuf:"bytes,1,opt,name=SpaceName,proto3" json:"SpaceName,omitempty"`     // 空间名
	ProjectName string `protobuf:"bytes,2,opt,name=ProjectName,proto3" json:"ProjectName,omitempty"` // 项目名
	Description string `protobuf:"bytes,3,opt,name=Description,proto3" json:"Description,omitempty"` // 描述
	Region      string `protobuf:"bytes,4,opt,name=Region,proto3" json:"Region,omitempty"`           // 空间区域
	UserName    string `protobuf:"bytes,5,opt,name=UserName,proto3" json:"UserName,omitempty"`       // 创建用户
}

func (x *VodCreateSpaceRequest) Reset() {
	*x = VodCreateSpaceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_request_request_vod_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodCreateSpaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodCreateSpaceRequest) ProtoMessage() {}

func (x *VodCreateSpaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vod_request_request_vod_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodCreateSpaceRequest.ProtoReflect.Descriptor instead.
func (*VodCreateSpaceRequest) Descriptor() ([]byte, []int) {
	return file_vod_request_request_vod_proto_rawDescGZIP(), []int{34}
}

func (x *VodCreateSpaceRequest) GetSpaceName() string {
	if x != nil {
		return x.SpaceName
	}
	return ""
}

func (x *VodCreateSpaceRequest) GetProjectName() string {
	if x != nil {
		return x.ProjectName
	}
	return ""
}

func (x *VodCreateSpaceRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *VodCreateSpaceRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *VodCreateSpaceRequest) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

type VodGetSpaceDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpaceName string `protobuf:"bytes,1,opt,name=SpaceName,proto3" json:"SpaceName,omitempty"` // 空间名
}

func (x *VodGetSpaceDetailRequest) Reset() {
	*x = VodGetSpaceDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_request_request_vod_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetSpaceDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetSpaceDetailRequest) ProtoMessage() {}

func (x *VodGetSpaceDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vod_request_request_vod_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetSpaceDetailRequest.ProtoReflect.Descriptor instead.
func (*VodGetSpaceDetailRequest) Descriptor() ([]byte, []int) {
	return file_vod_request_request_vod_proto_rawDescGZIP(), []int{35}
}

func (x *VodGetSpaceDetailRequest) GetSpaceName() string {
	if x != nil {
		return x.SpaceName
	}
	return ""
}

type VodListSpaceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset float64 `protobuf:"fixed64,1,opt,name=Offset,proto3" json:"Offset,omitempty"` // 查询游标
	Limit  float64 `protobuf:"fixed64,2,opt,name=Limit,proto3" json:"Limit,omitempty"`   // 查询数量
}

func (x *VodListSpaceRequest) Reset() {
	*x = VodListSpaceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_request_request_vod_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodListSpaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodListSpaceRequest) ProtoMessage() {}

func (x *VodListSpaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vod_request_request_vod_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodListSpaceRequest.ProtoReflect.Descriptor instead.
func (*VodListSpaceRequest) Descriptor() ([]byte, []int) {
	return file_vod_request_request_vod_proto_rawDescGZIP(), []int{36}
}

func (x *VodListSpaceRequest) GetOffset() float64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *VodListSpaceRequest) GetLimit() float64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type VodUpdateSpaceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpaceName         string `protobuf:"bytes,1,opt,name=SpaceName,proto3" json:"SpaceName,omitempty"`                 // 空间名
	SourceProjectName string `protobuf:"bytes,2,opt,name=SourceProjectName,proto3" json:"SourceProjectName,omitempty"` // 原项目
	TargetProjectName string `protobuf:"bytes,3,opt,name=TargetProjectName,proto3" json:"TargetProjectName,omitempty"` // 变更目标项目
	Description       string `protobuf:"bytes,4,opt,name=Description,proto3" json:"Description,omitempty"`             // 描述
}

func (x *VodUpdateSpaceRequest) Reset() {
	*x = VodUpdateSpaceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_request_request_vod_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodUpdateSpaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodUpdateSpaceRequest) ProtoMessage() {}

func (x *VodUpdateSpaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vod_request_request_vod_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodUpdateSpaceRequest.ProtoReflect.Descriptor instead.
func (*VodUpdateSpaceRequest) Descriptor() ([]byte, []int) {
	return file_vod_request_request_vod_proto_rawDescGZIP(), []int{37}
}

func (x *VodUpdateSpaceRequest) GetSpaceName() string {
	if x != nil {
		return x.SpaceName
	}
	return ""
}

func (x *VodUpdateSpaceRequest) GetSourceProjectName() string {
	if x != nil {
		return x.SourceProjectName
	}
	return ""
}

func (x *VodUpdateSpaceRequest) GetTargetProjectName() string {
	if x != nil {
		return x.TargetProjectName
	}
	return ""
}

func (x *VodUpdateSpaceRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type VodUpdateSpaceUploadConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpaceName   string `protobuf:"bytes,1,opt,name=SpaceName,proto3" json:"SpaceName,omitempty"`     // 空间名
	ConfigKey   string `protobuf:"bytes,2,opt,name=ConfigKey,proto3" json:"ConfigKey,omitempty"`     // 需要变更的设置key，值为VodSpaceUploadConfigKey中的枚举数字
	ConfigValue string `protobuf:"bytes,3,opt,name=ConfigValue,proto3" json:"ConfigValue,omitempty"` // 需要变更的设置value
}

func (x *VodUpdateSpaceUploadConfigRequest) Reset() {
	*x = VodUpdateSpaceUploadConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_request_request_vod_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodUpdateSpaceUploadConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodUpdateSpaceUploadConfigRequest) ProtoMessage() {}

func (x *VodUpdateSpaceUploadConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vod_request_request_vod_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodUpdateSpaceUploadConfigRequest.ProtoReflect.Descriptor instead.
func (*VodUpdateSpaceUploadConfigRequest) Descriptor() ([]byte, []int) {
	return file_vod_request_request_vod_proto_rawDescGZIP(), []int{38}
}

func (x *VodUpdateSpaceUploadConfigRequest) GetSpaceName() string {
	if x != nil {
		return x.SpaceName
	}
	return ""
}

func (x *VodUpdateSpaceUploadConfigRequest) GetConfigKey() string {
	if x != nil {
		return x.ConfigKey
	}
	return ""
}

func (x *VodUpdateSpaceUploadConfigRequest) GetConfigValue() string {
	if x != nil {
		return x.ConfigValue
	}
	return ""
}

// **********************************************************************
// 分发加速管理
// **********************************************************************
type VodListDomainRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpaceName string `protobuf:"bytes,1,opt,name=SpaceName,proto3" json:"SpaceName,omitempty"` // 空间名
}

func (x *VodListDomainRequest) Reset() {
	*x = VodListDomainRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_request_request_vod_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodListDomainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodListDomainRequest) ProtoMessage() {}

func (x *VodListDomainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vod_request_request_vod_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodListDomainRequest.ProtoReflect.Descriptor instead.
func (*VodListDomainRequest) Descriptor() ([]byte, []int) {
	return file_vod_request_request_vod_proto_rawDescGZIP(), []int{39}
}

func (x *VodListDomainRequest) GetSpaceName() string {
	if x != nil {
		return x.SpaceName
	}
	return ""
}

type VodCreateCdnRefreshTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpaceName string `protobuf:"bytes,1,opt,name=SpaceName,proto3" json:"SpaceName,omitempty"` // 空间名
	Urls      string `protobuf:"bytes,2,opt,name=Urls,proto3" json:"Urls,omitempty"`           // 刷新Url或目录
	Type      string `protobuf:"bytes,3,opt,name=Type,proto3" json:"Type,omitempty"`           // 刷新任务类型
}

func (x *VodCreateCdnRefreshTaskRequest) Reset() {
	*x = VodCreateCdnRefreshTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_request_request_vod_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodCreateCdnRefreshTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodCreateCdnRefreshTaskRequest) ProtoMessage() {}

func (x *VodCreateCdnRefreshTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vod_request_request_vod_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodCreateCdnRefreshTaskRequest.ProtoReflect.Descriptor instead.
func (*VodCreateCdnRefreshTaskRequest) Descriptor() ([]byte, []int) {
	return file_vod_request_request_vod_proto_rawDescGZIP(), []int{40}
}

func (x *VodCreateCdnRefreshTaskRequest) GetSpaceName() string {
	if x != nil {
		return x.SpaceName
	}
	return ""
}

func (x *VodCreateCdnRefreshTaskRequest) GetUrls() string {
	if x != nil {
		return x.Urls
	}
	return ""
}

func (x *VodCreateCdnRefreshTaskRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type VodCreateCdnPreloadTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpaceName string `protobuf:"bytes,1,opt,name=SpaceName,proto3" json:"SpaceName,omitempty"` // 空间名
	Urls      string `protobuf:"bytes,2,opt,name=Urls,proto3" json:"Urls,omitempty"`           // 预热Url
}

func (x *VodCreateCdnPreloadTaskRequest) Reset() {
	*x = VodCreateCdnPreloadTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_request_request_vod_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodCreateCdnPreloadTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodCreateCdnPreloadTaskRequest) ProtoMessage() {}

func (x *VodCreateCdnPreloadTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vod_request_request_vod_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodCreateCdnPreloadTaskRequest.ProtoReflect.Descriptor instead.
func (*VodCreateCdnPreloadTaskRequest) Descriptor() ([]byte, []int) {
	return file_vod_request_request_vod_proto_rawDescGZIP(), []int{41}
}

func (x *VodCreateCdnPreloadTaskRequest) GetSpaceName() string {
	if x != nil {
		return x.SpaceName
	}
	return ""
}

func (x *VodCreateCdnPreloadTaskRequest) GetUrls() string {
	if x != nil {
		return x.Urls
	}
	return ""
}

type VodListCdnTasksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpaceName  string `protobuf:"bytes,1,opt,name=SpaceName,proto3" json:"SpaceName,omitempty"`   //空间名
	TaskId     string `protobuf:"bytes,2,opt,name=TaskId,proto3" json:"TaskId,omitempty"`         //任务ID
	DomainName string `protobuf:"bytes,3,opt,name=DomainName,proto3" json:"DomainName,omitempty"` //域名
	TaskType   string `protobuf:"bytes,4,opt,name=TaskType,proto3" json:"TaskType,omitempty"`     //任务类型
	Status     string `protobuf:"bytes,5,opt,name=Status,proto3" json:"Status,omitempty"`         //任务状态
	StartTime  int64  `protobuf:"varint,6,opt,name=StartTime,proto3" json:"StartTime,omitempty"`  //起始时间戳
	EndTime    int64  `protobuf:"varint,7,opt,name=EndTime,proto3" json:"EndTime,omitempty"`      //截止时间戳
	PageNum    int32  `protobuf:"varint,8,opt,name=PageNum,proto3" json:"PageNum,omitempty"`      //页码
	PageSize   int32  `protobuf:"varint,9,opt,name=PageSize,proto3" json:"PageSize,omitempty"`    //页面大小
}

func (x *VodListCdnTasksRequest) Reset() {
	*x = VodListCdnTasksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_request_request_vod_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodListCdnTasksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodListCdnTasksRequest) ProtoMessage() {}

func (x *VodListCdnTasksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vod_request_request_vod_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodListCdnTasksRequest.ProtoReflect.Descriptor instead.
func (*VodListCdnTasksRequest) Descriptor() ([]byte, []int) {
	return file_vod_request_request_vod_proto_rawDescGZIP(), []int{42}
}

func (x *VodListCdnTasksRequest) GetSpaceName() string {
	if x != nil {
		return x.SpaceName
	}
	return ""
}

func (x *VodListCdnTasksRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *VodListCdnTasksRequest) GetDomainName() string {
	if x != nil {
		return x.DomainName
	}
	return ""
}

func (x *VodListCdnTasksRequest) GetTaskType() string {
	if x != nil {
		return x.TaskType
	}
	return ""
}

func (x *VodListCdnTasksRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *VodListCdnTasksRequest) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *VodListCdnTasksRequest) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *VodListCdnTasksRequest) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *VodListCdnTasksRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type VodListCdnAccessLogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domains        string `protobuf:"bytes,1,opt,name=Domains,proto3" json:"Domains,omitempty"`                // 域名（当前仅支持设置一个域名）
	StartTimestamp int32  `protobuf:"varint,2,opt,name=StartTimestamp,proto3" json:"StartTimestamp,omitempty"` // 查询起始时间戳，单位：Unix秒级时间戳
	EndTimestamp   int32  `protobuf:"varint,3,opt,name=EndTimestamp,proto3" json:"EndTimestamp,omitempty"`     // 查询结束时间戳，单位：Unix秒级时间戳
	SpaceName      string `protobuf:"bytes,4,opt,name=SpaceName,proto3" json:"SpaceName,omitempty"`            // 空间名称
}

func (x *VodListCdnAccessLogRequest) Reset() {
	*x = VodListCdnAccessLogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_request_request_vod_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodListCdnAccessLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodListCdnAccessLogRequest) ProtoMessage() {}

func (x *VodListCdnAccessLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vod_request_request_vod_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodListCdnAccessLogRequest.ProtoReflect.Descriptor instead.
func (*VodListCdnAccessLogRequest) Descriptor() ([]byte, []int) {
	return file_vod_request_request_vod_proto_rawDescGZIP(), []int{43}
}

func (x *VodListCdnAccessLogRequest) GetDomains() string {
	if x != nil {
		return x.Domains
	}
	return ""
}

func (x *VodListCdnAccessLogRequest) GetStartTimestamp() int32 {
	if x != nil {
		return x.StartTimestamp
	}
	return 0
}

func (x *VodListCdnAccessLogRequest) GetEndTimestamp() int32 {
	if x != nil {
		return x.EndTimestamp
	}
	return 0
}

func (x *VodListCdnAccessLogRequest) GetSpaceName() string {
	if x != nil {
		return x.SpaceName
	}
	return ""
}

type VodListCdnTopAccessUrlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domains        string `protobuf:"bytes,1,opt,name=Domains,proto3" json:"Domains,omitempty"`                // 域名（当前仅支持一个域名）
	StartTimestamp int32  `protobuf:"varint,2,opt,name=StartTimestamp,proto3" json:"StartTimestamp,omitempty"` // 查询起始时间戳，单位：Unix秒级时间戳
	EndTimestamp   int32  `protobuf:"varint,3,opt,name=EndTimestamp,proto3" json:"EndTimestamp,omitempty"`     // 查询结束时间戳，单位：Unix秒级时间戳
	SortType       string `protobuf:"bytes,4,opt,name=SortType,proto3" json:"SortType,omitempty"`              //排序方式，默认值为pv。取值：flux - 流量, pv -访问量
}

func (x *VodListCdnTopAccessUrlRequest) Reset() {
	*x = VodListCdnTopAccessUrlRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_request_request_vod_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodListCdnTopAccessUrlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodListCdnTopAccessUrlRequest) ProtoMessage() {}

func (x *VodListCdnTopAccessUrlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vod_request_request_vod_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodListCdnTopAccessUrlRequest.ProtoReflect.Descriptor instead.
func (*VodListCdnTopAccessUrlRequest) Descriptor() ([]byte, []int) {
	return file_vod_request_request_vod_proto_rawDescGZIP(), []int{44}
}

func (x *VodListCdnTopAccessUrlRequest) GetDomains() string {
	if x != nil {
		return x.Domains
	}
	return ""
}

func (x *VodListCdnTopAccessUrlRequest) GetStartTimestamp() int32 {
	if x != nil {
		return x.StartTimestamp
	}
	return 0
}

func (x *VodListCdnTopAccessUrlRequest) GetEndTimestamp() int32 {
	if x != nil {
		return x.EndTimestamp
	}
	return 0
}

func (x *VodListCdnTopAccessUrlRequest) GetSortType() string {
	if x != nil {
		return x.SortType
	}
	return ""
}

type VodDescribeVodDomainBandwidthDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DomainList    string `protobuf:"bytes,1,opt,name=DomainList,proto3" json:"DomainList,omitempty"`       // 域名列表,多个域名用逗号分割
	StartTime     string `protobuf:"bytes,2,opt,name=StartTime,proto3" json:"StartTime,omitempty"`         // 查询的起始时间, rfc3339
	EndTime       string `protobuf:"bytes,3,opt,name=EndTime,proto3" json:"EndTime,omitempty"`             // 查询的结束时间, rfc3339；查询时间跨度不超过93天
	Aggregation   int32  `protobuf:"varint,4,opt,name=Aggregation,proto3" json:"Aggregation,omitempty"`    // 聚合的时间粒度，单位秒，默认300，支持300，1800，3600和86400
	BandwidthType string `protobuf:"bytes,5,opt,name=BandwidthType,proto3" json:"BandwidthType,omitempty"` // 默认是CDN，支持CDN、PCDN、ALL
}

func (x *VodDescribeVodDomainBandwidthDataRequest) Reset() {
	*x = VodDescribeVodDomainBandwidthDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_request_request_vod_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodDescribeVodDomainBandwidthDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodDescribeVodDomainBandwidthDataRequest) ProtoMessage() {}

func (x *VodDescribeVodDomainBandwidthDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vod_request_request_vod_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodDescribeVodDomainBandwidthDataRequest.ProtoReflect.Descriptor instead.
func (*VodDescribeVodDomainBandwidthDataRequest) Descriptor() ([]byte, []int) {
	return file_vod_request_request_vod_proto_rawDescGZIP(), []int{45}
}

func (x *VodDescribeVodDomainBandwidthDataRequest) GetDomainList() string {
	if x != nil {
		return x.DomainList
	}
	return ""
}

func (x *VodDescribeVodDomainBandwidthDataRequest) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *VodDescribeVodDomainBandwidthDataRequest) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *VodDescribeVodDomainBandwidthDataRequest) GetAggregation() int32 {
	if x != nil {
		return x.Aggregation
	}
	return 0
}

func (x *VodDescribeVodDomainBandwidthDataRequest) GetBandwidthType() string {
	if x != nil {
		return x.BandwidthType
	}
	return ""
}

// **********************************************************************
// 回调管理
// **********************************************************************
type VodAddCallbackSubscriptionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpaceName string `protobuf:"bytes,1,opt,name=SpaceName,proto3" json:"SpaceName,omitempty"` // 空间名
	Url       string `protobuf:"bytes,2,opt,name=Url,proto3" json:"Url,omitempty"`             // 订阅URL
}

func (x *VodAddCallbackSubscriptionRequest) Reset() {
	*x = VodAddCallbackSubscriptionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_request_request_vod_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodAddCallbackSubscriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodAddCallbackSubscriptionRequest) ProtoMessage() {}

func (x *VodAddCallbackSubscriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vod_request_request_vod_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodAddCallbackSubscriptionRequest.ProtoReflect.Descriptor instead.
func (*VodAddCallbackSubscriptionRequest) Descriptor() ([]byte, []int) {
	return file_vod_request_request_vod_proto_rawDescGZIP(), []int{46}
}

func (x *VodAddCallbackSubscriptionRequest) GetSpaceName() string {
	if x != nil {
		return x.SpaceName
	}
	return ""
}

func (x *VodAddCallbackSubscriptionRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type VodSetCallbackEventRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpaceName string `protobuf:"bytes,1,opt,name=SpaceName,proto3" json:"SpaceName,omitempty"` // 空间名
	Events    string `protobuf:"bytes,2,opt,name=Events,proto3" json:"Events,omitempty"`       // 事件列表
}

func (x *VodSetCallbackEventRequest) Reset() {
	*x = VodSetCallbackEventRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_request_request_vod_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodSetCallbackEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodSetCallbackEventRequest) ProtoMessage() {}

func (x *VodSetCallbackEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vod_request_request_vod_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodSetCallbackEventRequest.ProtoReflect.Descriptor instead.
func (*VodSetCallbackEventRequest) Descriptor() ([]byte, []int) {
	return file_vod_request_request_vod_proto_rawDescGZIP(), []int{47}
}

func (x *VodSetCallbackEventRequest) GetSpaceName() string {
	if x != nil {
		return x.SpaceName
	}
	return ""
}

func (x *VodSetCallbackEventRequest) GetEvents() string {
	if x != nil {
		return x.Events
	}
	return ""
}

// **********************************************************************
// 智能策略-轻量版
// **********************************************************************
type VodGetSmartStrategyLitePlayInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayUrl    string `protobuf:"bytes,1,opt,name=PlayUrl,proto3" json:"PlayUrl,omitempty"`       // 播放url
	Format     string `protobuf:"bytes,2,opt,name=Format,proto3" json:"Format,omitempty"`         //封装格式，支持mp4,dash,hls，默认mp4Format
	Codec      string `protobuf:"bytes,3,opt,name=Codec,proto3" json:"Codec,omitempty"`           //编码类型，默认h264，可选值为h264,bytevc1等Codec
	Definition string `protobuf:"bytes,4,opt,name=Definition,proto3" json:"Definition,omitempty"` //视频流清晰度，默认返回全部，支持：240p，360p，480p，540p，720p，1080p,
	// 2k, 4k
	FileType        string `protobuf:"bytes,5,opt,name=FileType,proto3" json:"FileType,omitempty"`               //流文件类型，默认video，支持：加密视频流evideo，加密音频流传eaudio，非加密视频流video，普通音频音频流audio
	LogoType        string `protobuf:"bytes,6,opt,name=LogoType,proto3" json:"LogoType,omitempty"`               // 水印贴片标签
	Ssl             string `protobuf:"bytes,7,opt,name=Ssl,proto3" json:"Ssl,omitempty"`                         //返回https播放地址，默认否, 1-是；0-否
	NeedThumbs      string `protobuf:"bytes,8,opt,name=NeedThumbs,proto3" json:"NeedThumbs,omitempty"`           // 是否需要雪碧图（缩略图），默认否，1-是；0-否
	NeedBarrageMask string `protobuf:"bytes,9,opt,name=NeedBarrageMask,proto3" json:"NeedBarrageMask,omitempty"` // 是否需要蒙版弹幕，默认否，1-是；0-否
	UnionInfo       string `protobuf:"bytes,10,opt,name=UnionInfo,proto3" json:"UnionInfo,omitempty"`            // 唯一性标识信息
	HDRDefinition   string `protobuf:"bytes,11,opt,name=HDRDefinition,proto3" json:"HDRDefinition,omitempty"`    // HDR清晰度，默认不查询，支持：all,
}

func (x *VodGetSmartStrategyLitePlayInfoRequest) Reset() {
	*x = VodGetSmartStrategyLitePlayInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_request_request_vod_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetSmartStrategyLitePlayInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetSmartStrategyLitePlayInfoRequest) ProtoMessage() {}

func (x *VodGetSmartStrategyLitePlayInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vod_request_request_vod_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetSmartStrategyLitePlayInfoRequest.ProtoReflect.Descriptor instead.
func (*VodGetSmartStrategyLitePlayInfoRequest) Descriptor() ([]byte, []int) {
	return file_vod_request_request_vod_proto_rawDescGZIP(), []int{48}
}

func (x *VodGetSmartStrategyLitePlayInfoRequest) GetPlayUrl() string {
	if x != nil {
		return x.PlayUrl
	}
	return ""
}

func (x *VodGetSmartStrategyLitePlayInfoRequest) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *VodGetSmartStrategyLitePlayInfoRequest) GetCodec() string {
	if x != nil {
		return x.Codec
	}
	return ""
}

func (x *VodGetSmartStrategyLitePlayInfoRequest) GetDefinition() string {
	if x != nil {
		return x.Definition
	}
	return ""
}

func (x *VodGetSmartStrategyLitePlayInfoRequest) GetFileType() string {
	if x != nil {
		return x.FileType
	}
	return ""
}

func (x *VodGetSmartStrategyLitePlayInfoRequest) GetLogoType() string {
	if x != nil {
		return x.LogoType
	}
	return ""
}

func (x *VodGetSmartStrategyLitePlayInfoRequest) GetSsl() string {
	if x != nil {
		return x.Ssl
	}
	return ""
}

func (x *VodGetSmartStrategyLitePlayInfoRequest) GetNeedThumbs() string {
	if x != nil {
		return x.NeedThumbs
	}
	return ""
}

func (x *VodGetSmartStrategyLitePlayInfoRequest) GetNeedBarrageMask() string {
	if x != nil {
		return x.NeedBarrageMask
	}
	return ""
}

func (x *VodGetSmartStrategyLitePlayInfoRequest) GetUnionInfo() string {
	if x != nil {
		return x.UnionInfo
	}
	return ""
}

func (x *VodGetSmartStrategyLitePlayInfoRequest) GetHDRDefinition() string {
	if x != nil {
		return x.HDRDefinition
	}
	return ""
}

var File_vod_request_request_vod_proto protoreflect.FileDescriptor

var file_vod_request_request_vod_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x76, 0x6f, 0x64, 0x2f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x76, 0x6f, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x1d, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f,
	0x76, 0x6f, 0x64, 0x2f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2f, 0x76, 0x6f, 0x64,
	0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1d, 0x76, 0x6f, 0x64, 0x2f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2f, 0x76, 0x6f,
	0x64, 0x5f, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe9,
	0x03, 0x0a, 0x15, 0x56, 0x6f, 0x64, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x56, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x56, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x46, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x64, 0x65, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x43, 0x6f, 0x64, 0x65, 0x63, 0x12, 0x1e, 0x0a, 0x0a, 0x44, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x69, 0x6c, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x6f, 0x67, 0x6f, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4c, 0x6f, 0x67, 0x6f, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x42, 0x61, 0x73, 0x65, 0x36, 0x34, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x42, 0x61, 0x73, 0x65, 0x36, 0x34, 0x12, 0x10, 0x0a, 0x03, 0x53, 0x73, 0x6c, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x53, 0x73, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x4e, 0x65,
	0x65, 0x64, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x4e, 0x65, 0x65, 0x64, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x4e, 0x65,
	0x65, 0x64, 0x42, 0x61, 0x72, 0x72, 0x61, 0x67, 0x65, 0x4d, 0x61, 0x73, 0x6b, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x4e, 0x65, 0x65, 0x64, 0x42, 0x61, 0x72, 0x72, 0x61, 0x67, 0x65,
	0x4d, 0x61, 0x73, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x64, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x64, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x24, 0x0a, 0x0d,
	0x48, 0x44, 0x52, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x48, 0x44, 0x52, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x6c, 0x61, 0x79, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x50, 0x6c, 0x61, 0x79, 0x53, 0x63, 0x65, 0x6e, 0x65,
	0x12, 0x2e, 0x0a, 0x12, 0x44, 0x72, 0x6d, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x44, 0x72,
	0x6d, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x12, 0x18, 0x0a, 0x07, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x22, 0x5b, 0x0a, 0x1d, 0x56, 0x6f,
	0x64, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x6c, 0x61, 0x79,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x56,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x56, 0x69, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x42, 0x61, 0x73, 0x65, 0x36, 0x34, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x42,
	0x61, 0x73, 0x65, 0x36, 0x34, 0x12, 0x10, 0x0a, 0x03, 0x53, 0x73, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x53, 0x73, 0x6c, 0x22, 0x8d, 0x01, 0x0a, 0x1f, 0x56, 0x6f, 0x64, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x44, 0x72, 0x6d, 0x50, 0x6c, 0x61, 0x79,
	0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x44,
	0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x44, 0x72,
	0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x56, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x56, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x6c, 0x61, 0x79, 0x41,
	0x75, 0x74, 0x68, 0x49, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x50, 0x6c,
	0x61, 0x79, 0x41, 0x75, 0x74, 0x68, 0x49, 0x64, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x55, 0x6e, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x55, 0x6e,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x6b, 0x0a, 0x1d, 0x56, 0x6f, 0x64, 0x47, 0x65,
	0x74, 0x48, 0x6c, 0x73, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x44, 0x72, 0x6d, 0x41,
	0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x44, 0x72, 0x6d, 0x41, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x0e, 0x0a, 0x02,
	0x41, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x41, 0x6b, 0x12, 0x16, 0x0a, 0x06,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x22, 0xdb, 0x01, 0x0a, 0x2b, 0x56, 0x6f, 0x64, 0x47, 0x65, 0x74, 0x50,
	0x6c, 0x61, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x57, 0x69, 0x74, 0x68, 0x4c, 0x69, 0x76, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x53, 0x68, 0x69, 0x66, 0x74, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x55, 0x72, 0x69,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x55, 0x72,
	0x69, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x53, 0x73, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x53,
	0x73, 0x6c, 0x12, 0x28, 0x0a, 0x0f, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x45, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x34, 0x0a, 0x15,
	0x4e, 0x65, 0x65, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x65, 0x42, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x4e, 0x65, 0x65,
	0x64, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x65, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0x81, 0x01, 0x0a, 0x13, 0x56, 0x6f, 0x64, 0x55, 0x72, 0x6c, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x70,
	0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x4c, 0x0a, 0x07, 0x55, 0x52, 0x4c, 0x53,
	0x65, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x56, 0x6f, 0x6c, 0x63,
	0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x55, 0x72,
	0x6c, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x52, 0x4c, 0x53, 0x65, 0x74, 0x52, 0x07, 0x55,
	0x52, 0x4c, 0x53, 0x65, 0x74, 0x73, 0x22, 0x37, 0x0a, 0x1d, 0x56, 0x6f, 0x64, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x4a, 0x6f, 0x62, 0x49, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4a, 0x6f, 0x62, 0x49, 0x64, 0x73, 0x22,
	0xad, 0x01, 0x0a, 0x19, 0x56, 0x6f, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x46,
	0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x46,
	0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0xaf, 0x01, 0x0a, 0x15, 0x56, 0x6f, 0x64, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x4d, 0x65, 0x64,
	0x69, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x70, 0x61,
	0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x70,
	0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x50,
	0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x50,
	0x61, 0x74, 0x68, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x41,
	0x72, 0x67, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x43, 0x61, 0x6c, 0x6c, 0x62,
	0x61, 0x63, 0x6b, 0x41, 0x72, 0x67, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x46, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x46, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0xce, 0x01, 0x0a, 0x18, 0x56, 0x6f, 0x64, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x4d,
	0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x46, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x46, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x61, 0x6c, 0x6c,
	0x62, 0x61, 0x63, 0x6b, 0x41, 0x72, 0x67, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x72, 0x67, 0x73, 0x12, 0x1c, 0x0a, 0x09,
	0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x69,
	0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x69,
	0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0x9c, 0x01, 0x0a, 0x1a, 0x56, 0x6f, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12,
	0x22, 0x0a, 0x0c, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x72, 0x67, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x41,
	0x72, 0x67, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x22, 0x51, 0x0a, 0x17, 0x56, 0x6f, 0x64, 0x55, 0x72, 0x6c, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x4a, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x55, 0x52,
	0x4c, 0x53, 0x65, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x55, 0x52, 0x4c,
	0x53, 0x65, 0x74, 0x73, 0x22, 0x34, 0x0a, 0x1e, 0x56, 0x6f, 0x64, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x50, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x56, 0x69, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x56, 0x69, 0x64, 0x73, 0x22, 0x4e, 0x0a, 0x22, 0x56, 0x6f,
	0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x56, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x56,
	0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xd8, 0x02, 0x0a, 0x19, 0x56,
	0x6f, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x56, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x56, 0x69, 0x64, 0x12, 0x3a, 0x0a, 0x09, 0x50, 0x6f,
	0x73, 0x74, 0x65, 0x72, 0x55, 0x72, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x50, 0x6f, 0x73,
	0x74, 0x65, 0x72, 0x55, 0x72, 0x69, 0x12, 0x32, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x3e, 0x0a, 0x0b, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x04, 0x54, 0x61,
	0x67, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x54, 0x61, 0x67, 0x73, 0x12, 0x47, 0x0a, 0x10,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x10, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x2d, 0x0a, 0x17, 0x56, 0x6f, 0x64, 0x47, 0x65, 0x74, 0x4d,
	0x65, 0x64, 0x69, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x56, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x56, 0x69, 0x64, 0x73, 0x22, 0x4f, 0x0a, 0x15, 0x56, 0x6f, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x56, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x56, 0x69, 0x64,
	0x73, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x72, 0x67,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63,
	0x6b, 0x41, 0x72, 0x67, 0x73, 0x22, 0x6c, 0x0a, 0x1a, 0x56, 0x6f, 0x64, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x56, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x56, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x12,
	0x22, 0x0a, 0x0c, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x72, 0x67, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x41,
	0x72, 0x67, 0x73, 0x22, 0xa4, 0x02, 0x0a, 0x16, 0x56, 0x6f, 0x64, 0x47, 0x65, 0x74, 0x4d, 0x65,
	0x64, 0x69, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x56, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x56, 0x69, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x54, 0x61, 0x67, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x61, 0x67, 0x73,
	0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x2c, 0x0a, 0x11,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x22, 0xcd, 0x02, 0x0a, 0x1d, 0x56,
	0x6f, 0x64, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x56, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x56, 0x69, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x4c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73,
	0x12, 0x20, 0x0a, 0x0b, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x49, 0x64, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x49,
	0x64, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x53, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x49, 0x64,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x53, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x49, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x54, 0x61, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x54, 0x61, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x53, 0x73, 0x6c, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x53, 0x73, 0x6c, 0x22, 0x9c, 0x01, 0x0a, 0x1e, 0x56,
	0x6f, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x56, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x56, 0x69, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x4c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x46, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xe0, 0x01, 0x0a, 0x1c, 0x56, 0x6f,
	0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x56, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x56, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x46, 0x69,
	0x6c, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x32, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x2e, 0x0a, 0x03,
	0x54, 0x61, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x03, 0x54, 0x61, 0x67, 0x22, 0x9d, 0x01, 0x0a,
	0x23, 0x56, 0x6f, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x50, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x97, 0x01, 0x0a,
	0x23, 0x56, 0x6f, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x26,
	0x0a, 0x0e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x6f, 0x0a, 0x23, 0x56, 0x6f, 0x64, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x6e, 0x0a, 0x22, 0x56, 0x6f, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xac, 0x01, 0x0a, 0x20, 0x56, 0x6f, 0x64, 0x47,
	0x65, 0x74, 0x41, 0x75, 0x64, 0x69, 0x74, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x46, 0x6f, 0x72,
	0x41, 0x75, 0x64, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x56, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x56, 0x69, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x2c, 0x0a, 0x11, 0x4d, 0x69,
	0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x4d, 0x69, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x4f, 0x66, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x4d, 0x61, 0x78, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x11, 0x4d, 0x61, 0x78, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66,
	0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x22, 0xc3, 0x03, 0x0a, 0x1d, 0x56, 0x6f, 0x64, 0x47, 0x65,
	0x74, 0x4d, 0x4c, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x41, 0x75, 0x64, 0x69,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x56, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x56, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x74,
	0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x53, 0x74,
	0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x4f,
	0x70, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x4f,
	0x70, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x46, 0x70, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x46, 0x70, 0x73, 0x12, 0x26,
	0x0a, 0x0e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66,
	0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x75, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x4d, 0x69, 0x6c, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x43, 0x75,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x4d, 0x69, 0x6c, 0x6c, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x4e, 0x65,
	0x65, 0x64, 0x46, 0x69, 0x72, 0x73, 0x74, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x4e, 0x65, 0x65, 0x64, 0x46, 0x69, 0x72, 0x73, 0x74, 0x46, 0x72, 0x61,
	0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x4e, 0x65, 0x65, 0x64, 0x4c, 0x61, 0x73, 0x74, 0x46, 0x72,
	0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x4e, 0x65, 0x65, 0x64, 0x4c,
	0x61, 0x73, 0x74, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x4d, 0x69, 0x6c, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x4d, 0x69, 0x6c, 0x6c, 0x12, 0x20,
	0x0a, 0x0b, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x4d, 0x69, 0x6c, 0x6c, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x4d, 0x69, 0x6c, 0x6c,
	0x12, 0x2c, 0x0a, 0x11, 0x4d, 0x69, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x46,
	0x72, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x4d, 0x69, 0x6e,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x2c,
	0x0a, 0x11, 0x4d, 0x61, 0x78, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x46, 0x72, 0x61,
	0x6d, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x4d, 0x61, 0x78, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x22, 0x6f, 0x0a, 0x21,
	0x56, 0x6f, 0x64, 0x47, 0x65, 0x74, 0x42, 0x65, 0x74, 0x74, 0x65, 0x72, 0x46, 0x72, 0x61, 0x6d,
	0x65, 0x73, 0x46, 0x6f, 0x72, 0x41, 0x75, 0x64, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x56, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x56, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x12,
	0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x52, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x52, 0x61, 0x74, 0x65, 0x22, 0x4e, 0x0a,
	0x1e, 0x56, 0x6f, 0x64, 0x47, 0x65, 0x74, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x49, 0x6e, 0x66, 0x6f,
	0x46, 0x6f, 0x72, 0x41, 0x75, 0x64, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x56, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x56, 0x69,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x22, 0x5f, 0x0a,
	0x2f, 0x56, 0x6f, 0x64, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x63,
	0x53, 0x70, 0x65, 0x65, 0x63, 0x68, 0x52, 0x65, 0x63, 0x6f, 0x67, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x46, 0x6f, 0x72, 0x41, 0x75, 0x64, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x56, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x56,
	0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x22, 0x58,
	0x0a, 0x28, 0x56, 0x6f, 0x64, 0x47, 0x65, 0x74, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x41, 0x75,
	0x64, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x56, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x56, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x22, 0x2b, 0x0a, 0x17, 0x56, 0x6f, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x56, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x56, 0x69, 0x64, 0x22, 0xff, 0x01, 0x0a, 0x17, 0x56, 0x6f, 0x64, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x56, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x56, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x49, 0x64, 0x12, 0x44, 0x0a, 0x05, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e,
	0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x52, 0x05, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72, 0x69,
	0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x50, 0x72, 0x69,
	0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63,
	0x6b, 0x41, 0x72, 0x67, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x43, 0x61, 0x6c,
	0x6c, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x72, 0x67, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x45, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x4c, 0x6f, 0x77, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x6f, 0x77, 0x50,
	0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x22, 0xad, 0x01, 0x0a, 0x15, 0x56, 0x6f, 0x64, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x55,
	0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55,
	0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x38, 0x0a, 0x18, 0x56, 0x6f, 0x64, 0x47, 0x65,
	0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0x43, 0x0a, 0x13, 0x56, 0x6f, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x70, 0x61, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0xb3, 0x01, 0x0a, 0x15, 0x56, 0x6f, 0x64, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c,
	0x0a, 0x11, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x11,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x81, 0x01, 0x0a,
	0x21, 0x56, 0x6f, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4b, 0x65, 0x79, 0x12, 0x20,
	0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x34, 0x0a, 0x14, 0x56, 0x6f, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x70, 0x61, 0x63,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x70, 0x61,
	0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x66, 0x0a, 0x1e, 0x56, 0x6f, 0x64, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x43, 0x64, 0x6e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x70, 0x61, 0x63,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x70, 0x61,
	0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x55, 0x72, 0x6c, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x55, 0x72, 0x6c, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x22, 0x52,
	0x0a, 0x1e, 0x56, 0x6f, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x64, 0x6e, 0x50, 0x72,
	0x65, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x55, 0x72, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x55, 0x72,
	0x6c, 0x73, 0x22, 0x90, 0x02, 0x0a, 0x16, 0x56, 0x6f, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x64,
	0x6e, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x54,
	0x61, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x54, 0x61, 0x73,
	0x6b, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x50, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xa0, 0x01, 0x0a, 0x1a, 0x56, 0x6f, 0x64, 0x4c, 0x69, 0x73,
	0x74, 0x43, 0x64, 0x6e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x12, 0x26,
	0x0a, 0x0e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x22, 0x0a, 0x0c, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x45, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x70,
	0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xa1, 0x01, 0x0a, 0x1d, 0x56, 0x6f, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x43, 0x64, 0x6e, 0x54, 0x6f, 0x70, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x55, 0x72, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x44, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x22, 0x0a, 0x0c,
	0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x12, 0x1a, 0x0a, 0x08, 0x53, 0x6f, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x53, 0x6f, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0xca, 0x01, 0x0a,
	0x28, 0x56, 0x6f, 0x64, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x42, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x42, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x42, 0x61, 0x6e, 0x64,
	0x77, 0x69, 0x64, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x22, 0x53, 0x0a, 0x21, 0x56, 0x6f, 0x64,
	0x41, 0x64, 0x64, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x55, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x72, 0x6c, 0x22, 0x52,
	0x0a, 0x1a, 0x56, 0x6f, 0x64, 0x53, 0x65, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x22, 0xe8, 0x02, 0x0a, 0x26, 0x56, 0x6f, 0x64, 0x47, 0x65, 0x74, 0x53, 0x6d, 0x61,
	0x72, 0x74, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x4c, 0x69, 0x74, 0x65, 0x50, 0x6c,
	0x61, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x50, 0x6c, 0x61, 0x79, 0x55, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x50, 0x6c, 0x61, 0x79, 0x55, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x43, 0x6f, 0x64, 0x65, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x43, 0x6f, 0x64, 0x65, 0x63, 0x12, 0x1e, 0x0a, 0x0a, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x44, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x6f, 0x67, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x4c, 0x6f, 0x67, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x53, 0x73, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x53, 0x73, 0x6c, 0x12,
	0x1e, 0x0a, 0x0a, 0x4e, 0x65, 0x65, 0x64, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x73, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x4e, 0x65, 0x65, 0x64, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x73, 0x12,
	0x28, 0x0a, 0x0f, 0x4e, 0x65, 0x65, 0x64, 0x42, 0x61, 0x72, 0x72, 0x61, 0x67, 0x65, 0x4d, 0x61,
	0x73, 0x6b, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x4e, 0x65, 0x65, 0x64, 0x42, 0x61,
	0x72, 0x72, 0x61, 0x67, 0x65, 0x4d, 0x61, 0x73, 0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x55, 0x6e, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x55, 0x6e,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x24, 0x0a, 0x0d, 0x48, 0x44, 0x52, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x48, 0x44, 0x52, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0xc8, 0x01,
	0x0a, 0x28, 0x63, 0x6f, 0x6d, 0x2e, 0x76, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x6f, 0x64, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x0a, 0x56, 0x6f, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x01, 0x5a, 0x40, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x76, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2f,
	0x76, 0x6f, 0x6c, 0x63, 0x2d, 0x73, 0x64, 0x6b, 0x2d, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x76, 0x6f, 0x64, 0x2f, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0xa0, 0x01, 0x01, 0xd8, 0x01, 0x01,
	0xca, 0x02, 0x1f, 0x56, 0x6f, 0x6c, 0x63, 0x5c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5c,
	0x56, 0x6f, 0x64, 0x5c, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x5c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0xe2, 0x02, 0x23, 0x56, 0x6f, 0x6c, 0x63, 0x5c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x5c, 0x56, 0x6f, 0x64, 0x5c, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x5c, 0x47, 0x50, 0x42,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_vod_request_request_vod_proto_rawDescOnce sync.Once
	file_vod_request_request_vod_proto_rawDescData = file_vod_request_request_vod_proto_rawDesc
)

func file_vod_request_request_vod_proto_rawDescGZIP() []byte {
	file_vod_request_request_vod_proto_rawDescOnce.Do(func() {
		file_vod_request_request_vod_proto_rawDescData = protoimpl.X.CompressGZIP(file_vod_request_request_vod_proto_rawDescData)
	})
	return file_vod_request_request_vod_proto_rawDescData
}

var file_vod_request_request_vod_proto_msgTypes = make([]protoimpl.MessageInfo, 49)
var file_vod_request_request_vod_proto_goTypes = []interface{}{
	(*VodGetPlayInfoRequest)(nil),                           // 0: Volcengine.Vod.Models.Request.VodGetPlayInfoRequest
	(*VodGetOriginalPlayInfoRequest)(nil),                   // 1: Volcengine.Vod.Models.Request.VodGetOriginalPlayInfoRequest
	(*VodGetPrivateDrmPlayAuthRequest)(nil),                 // 2: Volcengine.Vod.Models.Request.VodGetPrivateDrmPlayAuthRequest
	(*VodGetHlsDecryptionKeyRequest)(nil),                   // 3: Volcengine.Vod.Models.Request.VodGetHlsDecryptionKeyRequest
	(*VodGetPlayInfoWithLiveTimeShiftSceneRequest)(nil),     // 4: Volcengine.Vod.Models.Request.VodGetPlayInfoWithLiveTimeShiftSceneRequest
	(*VodUrlUploadRequest)(nil),                             // 5: Volcengine.Vod.Models.Request.VodUrlUploadRequest
	(*VodQueryUploadTaskInfoRequest)(nil),                   // 6: Volcengine.Vod.Models.Request.VodQueryUploadTaskInfoRequest
	(*VodApplyUploadInfoRequest)(nil),                       // 7: Volcengine.Vod.Models.Request.VodApplyUploadInfoRequest
	(*VodUploadMediaRequest)(nil),                           // 8: Volcengine.Vod.Models.Request.VodUploadMediaRequest
	(*VodUploadMaterialRequest)(nil),                        // 9: Volcengine.Vod.Models.Request.VodUploadMaterialRequest
	(*VodCommitUploadInfoRequest)(nil),                      // 10: Volcengine.Vod.Models.Request.VodCommitUploadInfoRequest
	(*VodUrlUploadJsonRequest)(nil),                         // 11: Volcengine.Vod.Models.Request.VodUrlUploadJsonRequest
	(*VodGetRecommendedPosterRequest)(nil),                  // 12: Volcengine.Vod.Models.Request.VodGetRecommendedPosterRequest
	(*VodUpdateMediaPublishStatusRequest)(nil),              // 13: Volcengine.Vod.Models.Request.VodUpdateMediaPublishStatusRequest
	(*VodUpdateMediaInfoRequest)(nil),                       // 14: Volcengine.Vod.Models.Request.VodUpdateMediaInfoRequest
	(*VodGetMediaInfosRequest)(nil),                         // 15: Volcengine.Vod.Models.Request.VodGetMediaInfosRequest
	(*VodDeleteMediaRequest)(nil),                           // 16: Volcengine.Vod.Models.Request.VodDeleteMediaRequest
	(*VodDeleteTranscodesRequest)(nil),                      // 17: Volcengine.Vod.Models.Request.VodDeleteTranscodesRequest
	(*VodGetMediaListRequest)(nil),                          // 18: Volcengine.Vod.Models.Request.VodGetMediaListRequest
	(*VodGetSubtitleInfoListRequest)(nil),                   // 19: Volcengine.Vod.Models.Request.VodGetSubtitleInfoListRequest
	(*VodUpdateSubtitleStatusRequest)(nil),                  // 20: Volcengine.Vod.Models.Request.VodUpdateSubtitleStatusRequest
	(*VodUpdateSubtitleInfoRequest)(nil),                    // 21: Volcengine.Vod.Models.Request.VodUpdateSubtitleInfoRequest
	(*VodCreateVideoClassificationRequest)(nil),             // 22: Volcengine.Vod.Models.Request.VodCreateVideoClassificationRequest
	(*VodUpdateVideoClassificationRequest)(nil),             // 23: Volcengine.Vod.Models.Request.VodUpdateVideoClassificationRequest
	(*VodDeleteVideoClassificationRequest)(nil),             // 24: Volcengine.Vod.Models.Request.VodDeleteVideoClassificationRequest
	(*VodListVideoClassificationsRequest)(nil),              // 25: Volcengine.Vod.Models.Request.VodListVideoClassificationsRequest
	(*VodGetAuditFramesForAuditRequest)(nil),                // 26: Volcengine.Vod.Models.Request.VodGetAuditFramesForAuditRequest
	(*VodGetMLFramesForAuditRequest)(nil),                   // 27: Volcengine.Vod.Models.Request.VodGetMLFramesForAuditRequest
	(*VodGetBetterFramesForAuditRequest)(nil),               // 28: Volcengine.Vod.Models.Request.VodGetBetterFramesForAuditRequest
	(*VodGetAudioInfoForAuditRequest)(nil),                  // 29: Volcengine.Vod.Models.Request.VodGetAudioInfoForAuditRequest
	(*VodGetAutomaticSpeechRecognitionForAuditRequest)(nil), // 30: Volcengine.Vod.Models.Request.VodGetAutomaticSpeechRecognitionForAuditRequest
	(*VodGetAudioEventDetectionForAuditRequest)(nil),        // 31: Volcengine.Vod.Models.Request.VodGetAudioEventDetectionForAuditRequest
	(*VodListSnapshotsRequest)(nil),                         // 32: Volcengine.Vod.Models.Request.VodListSnapshotsRequest
	(*VodStartWorkflowRequest)(nil),                         // 33: Volcengine.Vod.Models.Request.VodStartWorkflowRequest
	(*VodCreateSpaceRequest)(nil),                           // 34: Volcengine.Vod.Models.Request.VodCreateSpaceRequest
	(*VodGetSpaceDetailRequest)(nil),                        // 35: Volcengine.Vod.Models.Request.VodGetSpaceDetailRequest
	(*VodListSpaceRequest)(nil),                             // 36: Volcengine.Vod.Models.Request.VodListSpaceRequest
	(*VodUpdateSpaceRequest)(nil),                           // 37: Volcengine.Vod.Models.Request.VodUpdateSpaceRequest
	(*VodUpdateSpaceUploadConfigRequest)(nil),               // 38: Volcengine.Vod.Models.Request.VodUpdateSpaceUploadConfigRequest
	(*VodListDomainRequest)(nil),                            // 39: Volcengine.Vod.Models.Request.VodListDomainRequest
	(*VodCreateCdnRefreshTaskRequest)(nil),                  // 40: Volcengine.Vod.Models.Request.VodCreateCdnRefreshTaskRequest
	(*VodCreateCdnPreloadTaskRequest)(nil),                  // 41: Volcengine.Vod.Models.Request.VodCreateCdnPreloadTaskRequest
	(*VodListCdnTasksRequest)(nil),                          // 42: Volcengine.Vod.Models.Request.VodListCdnTasksRequest
	(*VodListCdnAccessLogRequest)(nil),                      // 43: Volcengine.Vod.Models.Request.VodListCdnAccessLogRequest
	(*VodListCdnTopAccessUrlRequest)(nil),                   // 44: Volcengine.Vod.Models.Request.VodListCdnTopAccessUrlRequest
	(*VodDescribeVodDomainBandwidthDataRequest)(nil),        // 45: Volcengine.Vod.Models.Request.VodDescribeVodDomainBandwidthDataRequest
	(*VodAddCallbackSubscriptionRequest)(nil),               // 46: Volcengine.Vod.Models.Request.VodAddCallbackSubscriptionRequest
	(*VodSetCallbackEventRequest)(nil),                      // 47: Volcengine.Vod.Models.Request.VodSetCallbackEventRequest
	(*VodGetSmartStrategyLitePlayInfoRequest)(nil),          // 48: Volcengine.Vod.Models.Request.VodGetSmartStrategyLitePlayInfoRequest
	(*business.VodUrlUploadURLSet)(nil),                     // 49: Volcengine.Vod.Models.Business.VodUrlUploadURLSet
	(*wrappers.StringValue)(nil),                            // 50: google.protobuf.StringValue
	(*wrappers.Int64Value)(nil),                             // 51: google.protobuf.Int64Value
	(*business.WorkflowParams)(nil),                         // 52: Volcengine.Vod.Models.Business.WorkflowParams
}
var file_vod_request_request_vod_proto_depIdxs = []int32{
	49, // 0: Volcengine.Vod.Models.Request.VodUrlUploadRequest.URLSets:type_name -> Volcengine.Vod.Models.Business.VodUrlUploadURLSet
	50, // 1: Volcengine.Vod.Models.Request.VodUpdateMediaInfoRequest.PosterUri:type_name -> google.protobuf.StringValue
	50, // 2: Volcengine.Vod.Models.Request.VodUpdateMediaInfoRequest.Title:type_name -> google.protobuf.StringValue
	50, // 3: Volcengine.Vod.Models.Request.VodUpdateMediaInfoRequest.Description:type_name -> google.protobuf.StringValue
	50, // 4: Volcengine.Vod.Models.Request.VodUpdateMediaInfoRequest.Tags:type_name -> google.protobuf.StringValue
	51, // 5: Volcengine.Vod.Models.Request.VodUpdateMediaInfoRequest.ClassificationId:type_name -> google.protobuf.Int64Value
	50, // 6: Volcengine.Vod.Models.Request.VodUpdateSubtitleInfoRequest.Title:type_name -> google.protobuf.StringValue
	50, // 7: Volcengine.Vod.Models.Request.VodUpdateSubtitleInfoRequest.Tag:type_name -> google.protobuf.StringValue
	52, // 8: Volcengine.Vod.Models.Request.VodStartWorkflowRequest.Input:type_name -> Volcengine.Vod.Models.Business.WorkflowParams
	9,  // [9:9] is the sub-list for method output_type
	9,  // [9:9] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_vod_request_request_vod_proto_init() }
func file_vod_request_request_vod_proto_init() {
	if File_vod_request_request_vod_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_vod_request_request_vod_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetPlayInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_request_request_vod_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetOriginalPlayInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_request_request_vod_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetPrivateDrmPlayAuthRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_request_request_vod_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetHlsDecryptionKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_request_request_vod_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetPlayInfoWithLiveTimeShiftSceneRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_request_request_vod_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodUrlUploadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_request_request_vod_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodQueryUploadTaskInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_request_request_vod_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodApplyUploadInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_request_request_vod_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodUploadMediaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_request_request_vod_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodUploadMaterialRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_request_request_vod_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodCommitUploadInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_request_request_vod_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodUrlUploadJsonRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_request_request_vod_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetRecommendedPosterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_request_request_vod_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodUpdateMediaPublishStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_request_request_vod_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodUpdateMediaInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_request_request_vod_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetMediaInfosRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_request_request_vod_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodDeleteMediaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_request_request_vod_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodDeleteTranscodesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_request_request_vod_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetMediaListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_request_request_vod_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetSubtitleInfoListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_request_request_vod_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodUpdateSubtitleStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_request_request_vod_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodUpdateSubtitleInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_request_request_vod_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodCreateVideoClassificationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_request_request_vod_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodUpdateVideoClassificationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_request_request_vod_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodDeleteVideoClassificationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_request_request_vod_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodListVideoClassificationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_request_request_vod_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetAuditFramesForAuditRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_request_request_vod_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetMLFramesForAuditRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_request_request_vod_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetBetterFramesForAuditRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_request_request_vod_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetAudioInfoForAuditRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_request_request_vod_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetAutomaticSpeechRecognitionForAuditRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_request_request_vod_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetAudioEventDetectionForAuditRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_request_request_vod_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodListSnapshotsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_request_request_vod_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodStartWorkflowRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_request_request_vod_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodCreateSpaceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_request_request_vod_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetSpaceDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_request_request_vod_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodListSpaceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_request_request_vod_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodUpdateSpaceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_request_request_vod_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodUpdateSpaceUploadConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_request_request_vod_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodListDomainRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_request_request_vod_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodCreateCdnRefreshTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_request_request_vod_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodCreateCdnPreloadTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_request_request_vod_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodListCdnTasksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_request_request_vod_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodListCdnAccessLogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_request_request_vod_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodListCdnTopAccessUrlRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_request_request_vod_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodDescribeVodDomainBandwidthDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_request_request_vod_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodAddCallbackSubscriptionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_request_request_vod_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodSetCallbackEventRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_request_request_vod_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetSmartStrategyLitePlayInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_vod_request_request_vod_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   49,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_vod_request_request_vod_proto_goTypes,
		DependencyIndexes: file_vod_request_request_vod_proto_depIdxs,
		MessageInfos:      file_vod_request_request_vod_proto_msgTypes,
	}.Build()
	File_vod_request_request_vod_proto = out.File
	file_vod_request_request_vod_proto_rawDesc = nil
	file_vod_request_request_vod_proto_goTypes = nil
	file_vod_request_request_vod_proto_depIdxs = nil
}
