// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.12.4
// source: vod/business/vod_cdn.proto

package business

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VodDomainConfigInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpaceName         string                  `protobuf:"bytes,1,opt,name=SpaceName,proto3" json:"SpaceName,omitempty"`                 // 空间名称
	PlayInstanceInfo  *VodDomainInstanceInfos `protobuf:"bytes,2,opt,name=PlayInstanceInfo,proto3" json:"PlayInstanceInfo,omitempty"`   // 播放分发加速配置
	ImageInstanceInfo *VodDomainInstanceInfos `protobuf:"bytes,3,opt,name=ImageInstanceInfo,proto3" json:"ImageInstanceInfo,omitempty"` // 图片分发加速配置
}

func (x *VodDomainConfigInfo) Reset() {
	*x = VodDomainConfigInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_business_vod_cdn_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodDomainConfigInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodDomainConfigInfo) ProtoMessage() {}

func (x *VodDomainConfigInfo) ProtoReflect() protoreflect.Message {
	mi := &file_vod_business_vod_cdn_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodDomainConfigInfo.ProtoReflect.Descriptor instead.
func (*VodDomainConfigInfo) Descriptor() ([]byte, []int) {
	return file_vod_business_vod_cdn_proto_rawDescGZIP(), []int{0}
}

func (x *VodDomainConfigInfo) GetSpaceName() string {
	if x != nil {
		return x.SpaceName
	}
	return ""
}

func (x *VodDomainConfigInfo) GetPlayInstanceInfo() *VodDomainInstanceInfos {
	if x != nil {
		return x.PlayInstanceInfo
	}
	return nil
}

func (x *VodDomainConfigInfo) GetImageInstanceInfo() *VodDomainInstanceInfos {
	if x != nil {
		return x.ImageInstanceInfo
	}
	return nil
}

type VodDomainInstanceInfos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ByteInstances  []*VodDomainInstanceInfo `protobuf:"bytes,1,rep,name=ByteInstances,proto3" json:"ByteInstances,omitempty"`   // 点播源站实例列表
	OtherInstances []*VodDomainInstanceInfo `protobuf:"bytes,2,rep,name=OtherInstances,proto3" json:"OtherInstances,omitempty"` // 第三方源站实力列表
}

func (x *VodDomainInstanceInfos) Reset() {
	*x = VodDomainInstanceInfos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_business_vod_cdn_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodDomainInstanceInfos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodDomainInstanceInfos) ProtoMessage() {}

func (x *VodDomainInstanceInfos) ProtoReflect() protoreflect.Message {
	mi := &file_vod_business_vod_cdn_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodDomainInstanceInfos.ProtoReflect.Descriptor instead.
func (*VodDomainInstanceInfos) Descriptor() ([]byte, []int) {
	return file_vod_business_vod_cdn_proto_rawDescGZIP(), []int{1}
}

func (x *VodDomainInstanceInfos) GetByteInstances() []*VodDomainInstanceInfo {
	if x != nil {
		return x.ByteInstances
	}
	return nil
}

func (x *VodDomainInstanceInfos) GetOtherInstances() []*VodDomainInstanceInfo {
	if x != nil {
		return x.OtherInstances
	}
	return nil
}

type VodDomainInstanceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceId     string            `protobuf:"bytes,1,opt,name=InstanceId,proto3" json:"InstanceId,omitempty"`          //实例ID
	Domains        []*VodDomainoInfo `protobuf:"bytes,2,rep,name=Domains,proto3" json:"Domains,omitempty"`                //域名列表
	CanSelfEditing bool              `protobuf:"varint,3,opt,name=CanSelfEditing,proto3" json:"CanSelfEditing,omitempty"` //是否可自助配置
	ConfigStatus   string            `protobuf:"bytes,4,opt,name=ConfigStatus,proto3" json:"ConfigStatus,omitempty"`      //实例配置状态
}

func (x *VodDomainInstanceInfo) Reset() {
	*x = VodDomainInstanceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_business_vod_cdn_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodDomainInstanceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodDomainInstanceInfo) ProtoMessage() {}

func (x *VodDomainInstanceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_vod_business_vod_cdn_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodDomainInstanceInfo.ProtoReflect.Descriptor instead.
func (*VodDomainInstanceInfo) Descriptor() ([]byte, []int) {
	return file_vod_business_vod_cdn_proto_rawDescGZIP(), []int{2}
}

func (x *VodDomainInstanceInfo) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *VodDomainInstanceInfo) GetDomains() []*VodDomainoInfo {
	if x != nil {
		return x.Domains
	}
	return nil
}

func (x *VodDomainInstanceInfo) GetCanSelfEditing() bool {
	if x != nil {
		return x.CanSelfEditing
	}
	return false
}

func (x *VodDomainInstanceInfo) GetConfigStatus() string {
	if x != nil {
		return x.ConfigStatus
	}
	return ""
}

type VodDomainoInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain       string                    `protobuf:"bytes,1,opt,name=Domain,proto3" json:"Domain,omitempty"`             //域名
	Cname        string                    `protobuf:"bytes,2,opt,name=Cname,proto3" json:"Cname,omitempty"`               // cname域名
	ConfigStatus string                    `protobuf:"bytes,3,opt,name=ConfigStatus,proto3" json:"ConfigStatus,omitempty"` //配置状态
	CnameStatus  string                    `protobuf:"bytes,4,opt,name=CnameStatus,proto3" json:"CnameStatus,omitempty"`   //解析状态
	Status       string                    `protobuf:"bytes,5,opt,name=Status,proto3" json:"Status,omitempty"`             //运行状态
	Certificate  *VodDomainCertificateInfo `protobuf:"bytes,6,opt,name=Certificate,proto3" json:"Certificate,omitempty"`   //证书
	CreateTime   string                    `protobuf:"bytes,7,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`     //创建时间
	UpdateTime   string                    `protobuf:"bytes,8,opt,name=UpdateTime,proto3" json:"UpdateTime,omitempty"`     //更新时间
}

func (x *VodDomainoInfo) Reset() {
	*x = VodDomainoInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_business_vod_cdn_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodDomainoInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodDomainoInfo) ProtoMessage() {}

func (x *VodDomainoInfo) ProtoReflect() protoreflect.Message {
	mi := &file_vod_business_vod_cdn_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodDomainoInfo.ProtoReflect.Descriptor instead.
func (*VodDomainoInfo) Descriptor() ([]byte, []int) {
	return file_vod_business_vod_cdn_proto_rawDescGZIP(), []int{3}
}

func (x *VodDomainoInfo) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *VodDomainoInfo) GetCname() string {
	if x != nil {
		return x.Cname
	}
	return ""
}

func (x *VodDomainoInfo) GetConfigStatus() string {
	if x != nil {
		return x.ConfigStatus
	}
	return ""
}

func (x *VodDomainoInfo) GetCnameStatus() string {
	if x != nil {
		return x.CnameStatus
	}
	return ""
}

func (x *VodDomainoInfo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *VodDomainoInfo) GetCertificate() *VodDomainCertificateInfo {
	if x != nil {
		return x.Certificate
	}
	return nil
}

func (x *VodDomainoInfo) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *VodDomainoInfo) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

type VodDomainCertificateInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CertificateId   string `protobuf:"bytes,1,opt,name=CertificateId,proto3" json:"CertificateId,omitempty"`     //证书ID
	CertificateName string `protobuf:"bytes,2,opt,name=CertificateName,proto3" json:"CertificateName,omitempty"` //证书名
	CertificatePub  string `protobuf:"bytes,3,opt,name=CertificatePub,proto3" json:"CertificatePub,omitempty"`   //证书内容
	CertificatePri  string `protobuf:"bytes,4,opt,name=CertificatePri,proto3" json:"CertificatePri,omitempty"`   //私钥
	HttpsStatus     string `protobuf:"bytes,5,opt,name=HttpsStatus,proto3" json:"HttpsStatus,omitempty"`         // Http开启状态
}

func (x *VodDomainCertificateInfo) Reset() {
	*x = VodDomainCertificateInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_business_vod_cdn_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodDomainCertificateInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodDomainCertificateInfo) ProtoMessage() {}

func (x *VodDomainCertificateInfo) ProtoReflect() protoreflect.Message {
	mi := &file_vod_business_vod_cdn_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodDomainCertificateInfo.ProtoReflect.Descriptor instead.
func (*VodDomainCertificateInfo) Descriptor() ([]byte, []int) {
	return file_vod_business_vod_cdn_proto_rawDescGZIP(), []int{4}
}

func (x *VodDomainCertificateInfo) GetCertificateId() string {
	if x != nil {
		return x.CertificateId
	}
	return ""
}

func (x *VodDomainCertificateInfo) GetCertificateName() string {
	if x != nil {
		return x.CertificateName
	}
	return ""
}

func (x *VodDomainCertificateInfo) GetCertificatePub() string {
	if x != nil {
		return x.CertificatePub
	}
	return ""
}

func (x *VodDomainCertificateInfo) GetCertificatePri() string {
	if x != nil {
		return x.CertificatePri
	}
	return ""
}

func (x *VodDomainCertificateInfo) GetHttpsStatus() string {
	if x != nil {
		return x.HttpsStatus
	}
	return ""
}

type VodCreateCdnTaskResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId string `protobuf:"bytes,1,opt,name=TaskId,proto3" json:"TaskId,omitempty"` // 任务ID
}

func (x *VodCreateCdnTaskResult) Reset() {
	*x = VodCreateCdnTaskResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_business_vod_cdn_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodCreateCdnTaskResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodCreateCdnTaskResult) ProtoMessage() {}

func (x *VodCreateCdnTaskResult) ProtoReflect() protoreflect.Message {
	mi := &file_vod_business_vod_cdn_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodCreateCdnTaskResult.ProtoReflect.Descriptor instead.
func (*VodCreateCdnTaskResult) Descriptor() ([]byte, []int) {
	return file_vod_business_vod_cdn_proto_rawDescGZIP(), []int{5}
}

func (x *VodCreateCdnTaskResult) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

type ContentInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId     string  `protobuf:"bytes,1,opt,name=ItemId,proto3" json:"ItemId,omitempty"`
	Url        string  `protobuf:"bytes,2,opt,name=Url,proto3" json:"Url,omitempty"`
	Status     string  `protobuf:"bytes,3,opt,name=Status,proto3" json:"Status,omitempty"`
	TaskType   string  `protobuf:"bytes,4,opt,name=TaskType,proto3" json:"TaskType,omitempty"`
	CreateTime float64 `protobuf:"fixed64,5,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
	TaskId     string  `protobuf:"bytes,6,opt,name=TaskId,proto3" json:"TaskId,omitempty"`
}

func (x *ContentInfo) Reset() {
	*x = ContentInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_business_vod_cdn_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContentInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContentInfo) ProtoMessage() {}

func (x *ContentInfo) ProtoReflect() protoreflect.Message {
	mi := &file_vod_business_vod_cdn_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContentInfo.ProtoReflect.Descriptor instead.
func (*ContentInfo) Descriptor() ([]byte, []int) {
	return file_vod_business_vod_cdn_proto_rawDescGZIP(), []int{6}
}

func (x *ContentInfo) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *ContentInfo) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ContentInfo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ContentInfo) GetTaskType() string {
	if x != nil {
		return x.TaskType
	}
	return ""
}

func (x *ContentInfo) GetCreateTime() float64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *ContentInfo) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

type CdnTaskResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalCount   int32          `protobuf:"varint,1,opt,name=TotalCount,proto3" json:"TotalCount,omitempty"`
	PageNum      int32          `protobuf:"varint,2,opt,name=PageNum,proto3" json:"PageNum,omitempty"`
	PageSize     int32          `protobuf:"varint,3,opt,name=PageSize,proto3" json:"PageSize,omitempty"`
	ContentInfos []*ContentInfo `protobuf:"bytes,4,rep,name=ContentInfos,proto3" json:"ContentInfos,omitempty"`
}

func (x *CdnTaskResult) Reset() {
	*x = CdnTaskResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_business_vod_cdn_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CdnTaskResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CdnTaskResult) ProtoMessage() {}

func (x *CdnTaskResult) ProtoReflect() protoreflect.Message {
	mi := &file_vod_business_vod_cdn_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CdnTaskResult.ProtoReflect.Descriptor instead.
func (*CdnTaskResult) Descriptor() ([]byte, []int) {
	return file_vod_business_vod_cdn_proto_rawDescGZIP(), []int{7}
}

func (x *CdnTaskResult) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *CdnTaskResult) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *CdnTaskResult) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *CdnTaskResult) GetContentInfos() []*ContentInfo {
	if x != nil {
		return x.ContentInfos
	}
	return nil
}

var File_vod_business_vod_cdn_proto protoreflect.FileDescriptor

var file_vod_business_vod_cdn_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x76, 0x6f, 0x64, 0x2f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2f, 0x76,
	0x6f, 0x64, 0x5f, 0x63, 0x64, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1e, 0x56, 0x6f,
	0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x22, 0xfd, 0x01, 0x0a,
	0x13, 0x56, 0x6f, 0x64, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x62, 0x0a, 0x10, 0x50, 0x6c, 0x61, 0x79, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x56,
	0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f,
	0x64, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x73, 0x52, 0x10, 0x50, 0x6c, 0x61, 0x79, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x64, 0x0a, 0x11, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x36, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56,
	0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x52, 0x11, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xd4, 0x01, 0x0a,
	0x16, 0x56, 0x6f, 0x64, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x5b, 0x0a, 0x0d, 0x42, 0x79, 0x74, 0x65, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35,
	0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e,
	0x56, 0x6f, 0x64, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x42, 0x79, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x73, 0x12, 0x5d, 0x0a, 0x0e, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x56,
	0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f,
	0x64, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x73, 0x22, 0xcd, 0x01, 0x0a, 0x15, 0x56, 0x6f, 0x64, 0x44, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x0a,
	0x0a, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x48, 0x0a,
	0x07, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e,
	0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e,
	0x56, 0x6f, 0x64, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07,
	0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x43, 0x61, 0x6e, 0x53, 0x65,
	0x6c, 0x66, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0e, 0x43, 0x61, 0x6e, 0x53, 0x65, 0x6c, 0x66, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x12,
	0x22, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0xb8, 0x02, 0x0a, 0x0e, 0x56, 0x6f, 0x64, 0x44, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x14,
	0x0a, 0x05, 0x43, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x43,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x6e, 0x61, 0x6d,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x43,
	0x6e, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x5a, 0x0a, 0x0b, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x44, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x0b, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xdc,
	0x01, 0x0a, 0x18, 0x56, 0x6f, 0x64, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x65, 0x72, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x24, 0x0a, 0x0d, 0x43,
	0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x49,
	0x64, 0x12, 0x28, 0x0a, 0x0f, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x43, 0x65, 0x72, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x43,
	0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x50, 0x75, 0x62, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65,
	0x50, 0x75, 0x62, 0x12, 0x26, 0x0a, 0x0e, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x65, 0x50, 0x72, 0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x43, 0x65, 0x72,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x50, 0x72, 0x69, 0x12, 0x20, 0x0a, 0x0b, 0x48,
	0x74, 0x74, 0x70, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x48, 0x74, 0x74, 0x70, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x30, 0x0a,
	0x16, 0x56, 0x6f, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x64, 0x6e, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x54, 0x61, 0x73, 0x6b, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x22,
	0xa3, 0x01, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x16, 0x0a, 0x06, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x72, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x54,
	0x61, 0x73, 0x6b, 0x49, 0x64, 0x22, 0xb6, 0x01, 0x0a, 0x0d, 0x43, 0x64, 0x6e, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x61, 0x67, 0x65, 0x4e,
	0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x75,
	0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x4f, 0x0a,
	0x0c, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x0c, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x42, 0xca,
	0x01, 0x0a, 0x29, 0x63, 0x6f, 0x6d, 0x2e, 0x76, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x6f, 0x64, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x42, 0x06, 0x56, 0x6f,
	0x64, 0x43, 0x64, 0x6e, 0x50, 0x01, 0x5a, 0x41, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x76, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2f, 0x76, 0x6f,
	0x6c, 0x63, 0x2d, 0x73, 0x64, 0x6b, 0x2d, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x76, 0x6f, 0x64, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x2f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0xa0, 0x01, 0x01, 0xd8, 0x01, 0x01, 0xc2,
	0x02, 0x00, 0xca, 0x02, 0x20, 0x56, 0x6f, 0x6c, 0x63, 0x5c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x5c, 0x56, 0x6f, 0x64, 0x5c, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x5c, 0x42, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0xe2, 0x02, 0x23, 0x56, 0x6f, 0x6c, 0x63, 0x5c, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x5c, 0x56, 0x6f, 0x64, 0x5c, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x5c,
	0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_vod_business_vod_cdn_proto_rawDescOnce sync.Once
	file_vod_business_vod_cdn_proto_rawDescData = file_vod_business_vod_cdn_proto_rawDesc
)

func file_vod_business_vod_cdn_proto_rawDescGZIP() []byte {
	file_vod_business_vod_cdn_proto_rawDescOnce.Do(func() {
		file_vod_business_vod_cdn_proto_rawDescData = protoimpl.X.CompressGZIP(file_vod_business_vod_cdn_proto_rawDescData)
	})
	return file_vod_business_vod_cdn_proto_rawDescData
}

var file_vod_business_vod_cdn_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_vod_business_vod_cdn_proto_goTypes = []interface{}{
	(*VodDomainConfigInfo)(nil),      // 0: Volcengine.Vod.Models.Business.VodDomainConfigInfo
	(*VodDomainInstanceInfos)(nil),   // 1: Volcengine.Vod.Models.Business.VodDomainInstanceInfos
	(*VodDomainInstanceInfo)(nil),    // 2: Volcengine.Vod.Models.Business.VodDomainInstanceInfo
	(*VodDomainoInfo)(nil),           // 3: Volcengine.Vod.Models.Business.VodDomainoInfo
	(*VodDomainCertificateInfo)(nil), // 4: Volcengine.Vod.Models.Business.VodDomainCertificateInfo
	(*VodCreateCdnTaskResult)(nil),   // 5: Volcengine.Vod.Models.Business.VodCreateCdnTaskResult
	(*ContentInfo)(nil),              // 6: Volcengine.Vod.Models.Business.ContentInfo
	(*CdnTaskResult)(nil),            // 7: Volcengine.Vod.Models.Business.CdnTaskResult
}
var file_vod_business_vod_cdn_proto_depIdxs = []int32{
	1, // 0: Volcengine.Vod.Models.Business.VodDomainConfigInfo.PlayInstanceInfo:type_name -> Volcengine.Vod.Models.Business.VodDomainInstanceInfos
	1, // 1: Volcengine.Vod.Models.Business.VodDomainConfigInfo.ImageInstanceInfo:type_name -> Volcengine.Vod.Models.Business.VodDomainInstanceInfos
	2, // 2: Volcengine.Vod.Models.Business.VodDomainInstanceInfos.ByteInstances:type_name -> Volcengine.Vod.Models.Business.VodDomainInstanceInfo
	2, // 3: Volcengine.Vod.Models.Business.VodDomainInstanceInfos.OtherInstances:type_name -> Volcengine.Vod.Models.Business.VodDomainInstanceInfo
	3, // 4: Volcengine.Vod.Models.Business.VodDomainInstanceInfo.Domains:type_name -> Volcengine.Vod.Models.Business.VodDomainoInfo
	4, // 5: Volcengine.Vod.Models.Business.VodDomainoInfo.Certificate:type_name -> Volcengine.Vod.Models.Business.VodDomainCertificateInfo
	6, // 6: Volcengine.Vod.Models.Business.CdnTaskResult.ContentInfos:type_name -> Volcengine.Vod.Models.Business.ContentInfo
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_vod_business_vod_cdn_proto_init() }
func file_vod_business_vod_cdn_proto_init() {
	if File_vod_business_vod_cdn_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_vod_business_vod_cdn_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodDomainConfigInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_business_vod_cdn_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodDomainInstanceInfos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_business_vod_cdn_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodDomainInstanceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_business_vod_cdn_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodDomainoInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_business_vod_cdn_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodDomainCertificateInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_business_vod_cdn_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodCreateCdnTaskResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_business_vod_cdn_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContentInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_business_vod_cdn_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CdnTaskResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_vod_business_vod_cdn_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_vod_business_vod_cdn_proto_goTypes,
		DependencyIndexes: file_vod_business_vod_cdn_proto_depIdxs,
		MessageInfos:      file_vod_business_vod_cdn_proto_msgTypes,
	}.Build()
	File_vod_business_vod_cdn_proto = out.File
	file_vod_business_vod_cdn_proto_rawDesc = nil
	file_vod_business_vod_cdn_proto_goTypes = nil
	file_vod_business_vod_cdn_proto_depIdxs = nil
}
